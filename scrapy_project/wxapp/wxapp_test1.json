{"pub_time": "星期四 15:22", "article_content": "各位微信开发者：大家下午好。以下是小程序地图组件能力更新，以及上周我们在社区收到的问题反馈、需求的处理进度，希望同大家一同打造小程序生态。邀请各位开发者报名参与 iOS 微信客户端众测为了使大家开发地小程序更好的和微信新客户端版本进行融合，欢迎大家报名参加 iOS 微信客户端众测。详情见：邀请各位开发者报名参与 iOS 微信客户端众测-12.10小程序地图组件能力更新小程序地图组件增加个性化底图样式，开发者可通过开通腾讯位置服务更换小程序地图样式。腾讯位置服务提供四套基础模板，并提供基于模板的自定义编辑功能，支持4大类（背景面、背景线、道路、POI），44种小类地图元素的样式自定义。 详见《个性化地图功能介绍》和《小程序开发文档》 。上周问题反馈和处理进度（12.03-12.07）修复中的问题Android 保存到通讯录点击取消回调 ok 的问题 查看反馈 iOS text selectable 无法关闭选择区域的问题 查看反馈 wx.chooseImage 会把 gif 转成 jpg 的问题 查看反馈背景音频 iOS 真机模式下 暂停后 再播放 是从头开始播放的问题 查看反馈自动预览，识别参数好像不对的问题 查看反馈发票抬头 bug，电话号保存不上的问题 查看反馈 微信客服消息回复 success ios 还是显示改小程序提供的系统故障 查看反馈我不是小程序的管理员了？为什么“公众平台安全助手”还显示我是管理员 查看反馈 已修复的问题Launch App 错误：app 打开小程序后无法跳回 app 的问题 查看反馈小游戏 createVideo 错误的问题 查看反馈基础库2.4.1版本 downloadTask.abort() 无法正常执行的问题 查看反馈video组件视频时长显示异常，10000多分钟的问题 查看反馈 小程序管理后台数据分析-事件分析无法选择 查看反馈提审时system error 查看反馈修复完成，待客户端版本上线Android 使用 pageScrollTo 时，会先滚动到顶部，再滚动到指定位置的问题 查看反馈iOS 用VIDEO组件时视频一直在转圈加载的问题 查看反馈视频全屏后 textarea 的 placeholder 浮在最上面的问题 查看反馈需求反馈跟进迭代中增加配置使开发者可以控制屏幕方向的需求 查看反馈开发者工具增加“粘贴”的菜单的需求 查看反馈社区开源推荐做个排序功能的需求 查看反馈需求评估中视频录制 30s 时限提高的需求 查看反馈完善视频弹幕功能的需求 查看反馈小程序 input 点击的时候获得光标位置的需求 查看反馈建议下拉刷新增加监听的需求 查看反馈                                                                                                                                                                    微信团队                                                                                                                                                                2018.12.13", "author": "微信团队", "title": "社区每周 | 上周社区问题反馈以及功能优化更新（12.03-12.07）", "GitHub_Star": null}
{"pub_time": "07-04", "article_content": "小程序上线后16个月，来自开发者的小程序2.0时代的追问来了：小程序越来越多，如何突围而出？微信的社交流量，开发者到底如何挖掘？小游戏作为小程序的新生产品，开发者生态初步建立，游戏从业者如何把握小游戏的机会？做小游戏好变现吗？今天，微信公开课第七季重磅回归，升级为“小程序+小游戏”两天专场，有产品发布，有解决方案，还有开发指导！现在，我们邀请大家共赴小程序2.0时代！微信公开课第七季首站将于7月10日~11日登陆上海，带来小程序2.0时代的最新能力和解决方案，并首次加入小游戏模块，发现更好的小程序和小游戏，一起建设更有实际效用的开发者生态。三大新动向小程序2.0时代如何应变？1小程序2.0 ，开发者如何接招？2018年，小程序进入2.0阶段，除了连接更多场景，解决更多需求外，也有了新的目标：发现更多的小程序、帮小程序更好地留存、第三方生态开放、更深度地连接行业……今年，在基础能力、开放、行业连接上，小程序将会有一系列新的动作。开发者和商户，该如何接招？微信公开课将告诉你！2小游戏开放100天后，首次专场亮相 小游戏开放100天后，开发者生态已初步建立，今年将作为新增的核心模块走进微信公开课。首次公开亮相，官方团队将“组团”现身，发布核心信息。另外，小游戏玩得6的开发者将首次走到公开课现场，独家分享经验。好不好，来现场看。3新增模块，为开发者更多扶持今年，我们新增了开发者模块，对微信公开课内容全新升级，开发者将获得更多技术交流和培育机会。同时，将新增展区玩法，展示小程序和小游戏生态合作伙伴的相关案例成果。现场还可扫码体验游戏，挑战高分记录，或者组队对战，感受“小游大作”的魅力。___________   今年全新升级的微信公开课将首度亮相，赶快扫描下面的小程序码，查看详细议程信息，报名吧~（微信公开课小程序）", "author": "微信团队", "title": "7.10-7.11，微信公开课第七季——“小程序2.0”和小游戏 报名启动", "GitHub_Star": null}
{"pub_time": "11-13", "article_content": "微信小程序黑客马拉松正式启动近日，小程序斩获一项世界级殊荣——作为一项全新的技术和应用创新，小程序首次获选世界互联网领先科技成果。目前小程序应用数量已超过 100 万，覆盖了 200 多个细分行业，日活用户达到 2 亿。微信小程序已经构建了一个完整的开发环境和开发者生态，有超过 150 万开发者进入小程序生态，在 2017 年带动就业 104 万，社会效应不断提升。小程序走进了高校计算机课堂，新职业「小程序员」也应运而生。小程序的蓬勃发展也使得「小程序人文化创业」兴起，小程序的技术难度降低，更多非技术人才加入，掀起了小程序全民创业热潮。正如马化腾作为腾讯公司代表上台领奖时说到：过去开发软件，我们常常要考虑不同开发环境的语言、设备的适配性和成本。现在，开发者可以在一个「类操作底层」去开发应用，打破了过去受限的开发环境，为「跨系统开发」这个世界难题给出了中国的解决方案，小程序创业者们迎来了新的机遇。 由腾讯公司微信事业群主办、SegmentFault 承办的「微信小程序WeGeek Hackathon」（黑客马拉松）将于 2018 年 12 月 15 日 - 12 月 16 日在北京正式启动，本次黑客马拉松面向全球小程序开发者、爱好者，旨在通过微信小程序平台进行小程序的创新开发，共同建设小程序生态！做最酷的 Mini Program Creators本次黑客马拉松的主题是 Mini Program Creators，我们将召集最富有创造力的 开发者、产品经理、设计师，在 48 小时内 运用微信小程序框架，打造出一款 足够好玩、足够创新 的小程序。具体题目会分为多个方向，并在大赛前一周正式公布。黑客马拉松自诞生起就一直是开发者、设计师、创业团队的狂欢盛宴。小程序因其结构简单、搭建快速、开发成本低等特点，让两天内的快速开发成为了可能。在这场黑客马拉松的规定时间里，你可以充分发挥创造力，并与团队成员高度配合，从 0 开始创造出一个全新的产品，收获一个能够实现自己想法的小程序。你们准备好接受小程序的挑战了吗？加入微信小程序黑客马拉松，来做最酷的 Mini Program Creators！奖项设置大赛共设一、二、三等奖各一名，获奖团队将获得大赛奖金。一等奖¥1024*20二等奖¥1024*16三等奖¥1024*10 此外，凡在规定时间内完成作品的参赛团队均可以获得微信大礼包一份，更多奖品内容持续公布中。(注：所有奖金为税前金额)参与对象本次黑客马拉松面向全国职业开发者、高校学生等小程序爱好者，同时还将招募部分产品经理和 UI 设计师，与开发者自由组队参赛。 参赛者以个人身份报名，以团队身份参赛的每个成员都要单独报名。报名后官方会对报名人员进行筛选。团队规模每个团队 1-5 人，团队最高人限 5 人，一人只能参与一个团队。现场组队参赛者可提前组队，也可到现场自由组队。现场设有白板和便利贴，参赛者可在便利贴上写明自己擅长的技能、想要担任的团队角色，以便大家更快组队。活动时间与地点🕘 2018年12月15日（周六）09:00至2018年12月16日（周日）17:00📍 北京腾讯众创空间（回龙观）报名参与", "author": "微信团队", "title": "微信小程序黑客马拉松将开始，来做最酷的Mini Program Creators", "GitHub_Star": null}
{"pub_time": "12-04", "article_content": "一年一度，微信团队的邀约如期而至。1月9日-10日，2019微信公开课PRO将以“同行With Us”的主题，和朋友们一起聊聊微信这一年。2天、48小时、2场主论坛、13场平行论坛、 1场神秘的“微信之夜”……我们在广州等你24小时：微信官方放大招1月9日，是小程序正式发布2周年的日子，我们将会在现场公布最新能力与动态，让小程序能够更好地被发现和使用。经过2018的风风雨雨，小游戏下一步将开放一些新能力，在2019迎来新起点。内容创业者的春天真的已经走远了吗？很多事情可能到最后才知道“好看”。在智聆之后，微信AI家族又添新成员了，想要了解它？10.83亿，微信装了世界上1/7的人口，在这里人们的生活方式发生了翻天覆地的变化。官方发布还有更多，一篇文章说不完的，来现场听。48小时：微信智慧家族全行业上阵商业化是微信生态探索世界的一种方式。1月10日，微信的智慧家族将会集体出动，全方位诠释产业互联网时代的智慧趋势。○ 有工具。微信支付、小程序和企业微信成为行业智慧解决方案的基础工具，官方将介绍用好三大工具的关键之处。○ 有场景。在零售之外，微信智慧产业已经触达到生活的方方面面，涵盖餐饮、出行、教育、政务民生等多个生活场景。○ 有案例。来自各个不同产业的创新领袖，将在现场与微信团队进行公开对话，总结让如何让工具产生最大价值的经验，并预测未来趋势。○ 有未来。从技术出海到服务商生态出海，2019微信支付的中国模式将继续在海外书写新篇章。预揽2019的智慧风景，来现场看。8年同行：世界很精彩8年的时光，微信与用户、合作伙伴、商户等一起，创造出了一个鲜活而丰富的生态。这8年间，微信月活用户达到10.83亿，微信支付用户数超过8亿，小程序日活用户达到2亿。每一天，微信通过手机屏幕，将用户与方寸之外的无限世界连接起来。这8年间，150万小程序员在平台上开发出超过100万个小程序，微信公众平台上聚集了超过2000万公众帐号，超过3万家服务商与微信支付站在一起，80%的中国500强企业已开通企业微信。每一天，微信与合作伙伴们一起，让世界更加丰富多彩。这8年间，微信为362个城市的用户提供城市服务，10000+公共事务可以被快捷地完成；截至2017年底，微信拉动社会就业规模达到2030万人。每一天，微信都参与着社会的发展进程。（扫码识别小程序购票）2019年，在消费互联网与产业互联网的连接处，微信将会以何种方式与大家继续同行？请你一起边走边看。", "author": "微信团队", "title": "与微信同行，2019微信公开课PRO售票启动", "GitHub_Star": null}
{"pub_time": "09-07", "article_content": "1创建企业主页 Step1：选择创建1.右上角社区“登录”2.若无企业主页，点击“创建”Step2：小程序管理员扫码请用已认证的企业小程序管理员扫码。Step3：选择企业主页主体1.选择创建以某个公司为主体的小程序2.每个主体只能创建一个企业主页。Step4：选择企业主页的类型1.如果你是小程序开发平台，可选择平台型服务商，需填写第三方帐号App ID；2.如果你是为其他企业进行小程序定制化开发，可选择定制化服务商；3.如果你是一个普通商户、政府组织或者媒体，希望做自己的小程序，可选择普通商户/政府组织/媒体。注意：企业主页的类型不可修改，请慎重选择。Step5：确认企业主页的主体Step6：编辑企业主页的资料1.上传企业主页的logo、填写企业名称、介绍等；2.选择自己服务的行业或者所在行业：服务行业最多可选择4个；所在行业最多可选择1个；3.若选择了平台型服务商，需要填写第三方平台的 AppID，第三方平台的主体需与企业主页的主体一致。Step7：企业主页运营创建成功后，你可以进行如下操作：1. 编辑企业主页的资料，一个月可以有3次修改机会；2. 可修改管理员；3. 添加运营人员，最多可添加10个，运营人员可以企业身份登录企业主页，在社区进行操作、回答；4. 添加企业的小程序或者插件案例，小程序和插件案例可各添加3个；5. 以企业主页在社区所有的回答、分享、评论与回复，将记录在该企业上。2登录企业主页 若创建企业主页后，企业主页的管理员/运营者可以企业的身份登录社区，代表企业在社区进行分享和回复。1.选择在社区以哪种身份登录企业主页2.若有多个企业主页，可选择一个登录", "author": "微信团队", "title": "社区企业主页创建/登录操作指引", "GitHub_Star": null}
{"pub_time": "09-07", "article_content": "为了优化用户的使用体验，平台将回收“使用 wx.getUserInfo 接口直接弹出授权框”的能力，开发者需要使用组件方式唤起登录授权弹窗。2018年10月10日后发布新版本的小程序，将无法在线上版本中使用接口直接弹出授权框。开发者可结合平台设计建议，提前做好兼容，合理使用微信登录能力。能力调整背景怎么合理使用微信登录能力小程序登录流程设计建议01能力调整背景推出微信登录能力的初衷是希望：当用户使用小程序时，可以便捷地使用微信身份登录小程序。但在实际使用场景中，我们发现：很多开发者在打开小程序时直接弹出授权框，如果用户点击拒绝授权，无法使用小程序。在用户无法获知当前小程序服务内容的情况下，很多用户就会选择拒绝授权并离开当前小程序。所以“一进入小程序就要求用户授权”的做法打断了用户正常使用小程序的流程，同时也不利于小程序获取新用户。所以平台调整登录接口，回收“使用 wx.getUserInfo 接口直接弹出授权框”的能力，并鼓励开发者参照以下指引合理改造小程序内的登录流程。02怎么合理使用微信登录能力平台分别提供多种方式实现微信登录：1. 调用wx.login接口，静默获取openid适用场景：无需使用用户头像、昵称、Unionid信息2. 使用 open-data （小程序）或者开放数据域（小游戏）的方式展示用户信息（无需用户授权）适用场景：需要在前端“展示”用户头像、昵称信息，但不需要获取Unionid3.使用button（小程序）或UserInfoButton（小游戏）组件，用户点击后弹窗请求用户授权适用场景：需要获取用户头像、昵称、Unionid等基本信息开发建议第一步：获取openID当用户访问小程序时，先通过wx.login，获取用户openID 。这时无需弹框授权，开发者拿到 openID 可以建立自身的帐号 ID。第二步： 使用open-data方式或开放数据域方式展示头像昵称如需要在前端展示用户头像、昵称信息， 使用open-data 方式或者开放数据域的方式展示用户信息第三步：根据实际使用场景，使用组件，引导用户登录在关键操作中，如必须获取用户头像、昵称、UnionID信息，可根据第一步获取的openID判断是新用户还是旧用户：    如果是旧用户，可以直接登录，也可定期使用wx.getUserInfo更新用户的信息；    如果是新用户，使用button（小程序）或UserInfoButton（小游戏）组件，在用户点击后弹窗请求获取用户基本信息。03小程序登录流程设计建议a. 在必须用到登录信息的环节引导用户登录在用户必须登录时才引导用户登录（如：购买前需要获取会员信息，用于同步积分数据），而不是用户一进入小程序就弹窗要求用户授权。如只需要在前端展示用户头像、昵称，无需要求用户授权，可直接展示。b.清晰、准确地引导用户登录在登录页面中，清晰、准确地告知用户当前操作是登录，说明获取登录信息的目的（如：用于同步会员积分数据等）c. 不强制用户必须登录后才能使用小程序服务提供游客模式，不强制用户必须登录后才能进入小程序。如要求必须授权头像昵称等信息才能继续使用小程序，会导致某些用户放弃使用该小程序。", "author": "微信团队", "title": "小程序微信登录能力调整", "GitHub_Star": null}
{"pub_time": "09-12", "article_content": "开发者可以通过 wx.openSetting 接口来打开小程序设置界面并返回用户的设置结果。在原来的 wx.openSetting 接口中，我们允许开发者直接调用此接口，但目前我们发现有不少开发者滥用此接口，使用户在无任何操作时，不断地强行跳转至设置页，导致用户无法正常使用甚至无法退出小程序。为保证用户获得更顺畅的小程序使用体验，避免此类滥用情况，我们对该接口进行了调整。调整后“打开小程序设置页”将支持以下两种实现方式：方法1：使用 button 组件来使用此功能，示例代码如下：<button open-type=\"openSetting\" bindopensetting=\"callback\">打开设置页</button>方法2:由点击行为触发wx.openSetting接口的调用，示例代码如下：<button bindtap=\"openSetting\">打开设置页</button>  openSetting() {  wx.openSetting()}方法2已在最新版开发者工具中支持（基础库切到2.2.4及以上），开发者可以尽早适配。此次调整会对直接调用wx.openSetting接口造成影响原无需用户点击即可直接调用wx.openSetting接口的实现方式将不再支持，即将废弃的错误使用方式示例如下：onShow() {  wx.openSetting()}10月10日起新提交发布的版本将会受到此调整的影响。需要各位开发者注意，10月10日起新提交发布的小程序版本将不再支持无需用户点击即可直接调用的“打开小程序设置页”接口，请开发者尽早适配。调整策略在基础库 2.3.0 及以上版本生效，该基础库版本对应微信客户端6.7.2版本。另外，考虑到兼容性等问题，在基础库版本 2.3.0 以下的环境中不受此策略影响。", "author": "微信团队", "title": "打开小程序设置页（wx.openSetting）接口调整", "GitHub_Star": null}
{"pub_time": "09-12", "article_content": "近期我们收到了很多用户对小程序/小游戏中分享功能的投诉：在某些小程序/小游戏中，分享并非是用户主动自发的行为，而是受到了某类利益的诱惑，或是被迫分享。这样的内容充斥在群里、小程序里，对用户造成了骚扰。分享功能，旨在帮助用户更流畅地与好友分享内容和服务，应是用户自发的行为。在原来的分享接口中，用户发起分享动作之后，可以通过 success 、fail、complete等回调来判断用户是否完成了最后的分享动作。通过这个能力，开发者可以将产品交互在分享这个能力上做得比较自然和顺畅。现在为鼓励用户自发分享喜爱的内容，减少“强制分享至不同群”等滥用分享能力，破坏用户体验的行为，在我们权衡了分享功能带来的利弊后，分享功能将进行以下调整：10月10日起新提交发布的版本，不再支持分享回调参数 success 、fail 、complete，即用户从小程序/小游戏中分享消息给好友时，开发者将无法获知用户是否分享完成，也无法在分享后立即获得分享成功后的回调参数shareTicket。该调整可以在基础库 2.3.0及以上版本体验。此次调整可能影响到三种分享功能的用法。第一种:判断用户是否分享成功，进而给予用户奖励。例如：小程序提示用户“分享到5个群，可以获得一张20元的优惠券”。这类诱导用户分享的行为是我们平台所不倡导的，后续将没有办法实现。第二种:分享完成后变更当前的页面状态例如：赠送礼品场景下，用户点击“赠送”按钮，将礼品分享出去，分享成功后，界面展示“等待领取”。这类场景，我们建议可以适当调整交互方案。例如在分享后继续保留“赠送”按钮，但在页面上提示用户一个礼品只能被一人领取，重复赠送无效。第三种：通过用户分享之后的 shareTicket 获取群唯一标识 openGId ，以显示对应群的相关信息。例如：通过分享小程序到某个群里，可以查看该群内成员的排行榜。此次调整后，用户分享完成后无法立刻显示该群的排行榜信息，但仍可在用户从群消息点击进入小程序时显示该群的排行榜信息。10月10日起新提交发布的版本将会受到此调整的影响。需要各位开发者注意，10月10日起新提交发布的版本将会受到此策略的影响，请及时调整分享相关能力，考虑兼容上述调整带来的影响。调整策略在基础库 2.3.0 及以上版本生效，该基础库版本对应微信客户端6.7.2版本。另外，考虑到兼容性等问题，在基础库版本 2.3.0 以下的环境中不受此策略影响，小程序/小游戏可继续获取分享回调事件。", "author": "微信团队", "title": "“分享监听”能力调整", "GitHub_Star": null}
{"pub_time": "09-18", "article_content": "社区用户都可在企业主页/个人主页添加小程序/插件为案例，作为个人/企业的代表作。若没有企业主页，可查看企业主页操作指引一、添加案例的入口Step 1 进入添加案例的入口1.点击右上角个人/企业头像，可进入企业主页2.选择“添加案例”Step 2 选择添加小程序/插件，编写文章PS：每个主页只能添加3个小程序、3个插件，请选择最具有代表性的小程序/插件作为你的案例。1.选择添加小程序作为案例可在案例中介绍小程序的定位、主要的功能以及数据效果等。选择小程序时，需要小程序管理员扫码同意添加为案例。2.选择添加插件作为案例可在案例中介绍插件的适用行业、服务场景、具体应用等。选择插件时，需要插件的管理员扫码同意添加为案例。（案例框架）（选择案例的类型）（编辑内容）（选择添加的案例/或者通过填写App ID可添加案例） 点击“发表”后，就可以添加成为为自己的案例了，在主页上会可以展示了。其中插件的案例，将出现在插件板块的案例分享。", "author": "微信团队", "title": "社区添加案例操作指引", "GitHub_Star": null}
{"pub_time": "07-09", "article_content": "有时候我们使用一个小程序会遇到以下情形：我们打开一个小程序，就看见提示“分享到5个群，可以获得一张20元的优惠券”，吸引我们去无脑分享到不同的群里；打开某个小游戏，提示我“一定要分享到xx个群，才能继续玩游戏”；……而我们在群里打开这类小程序，仍然是提示我分享的信息，这类功能无疑打断了我们对小程序/小游戏正常的功能使用。我们收到了很多用户对这类小程序/小游戏的抱怨。这类分享并非是用户主动自发的，而是受到了某类利益的诱惑，或是被迫分享。这样的内容充斥在群里、小程序里，对用户造成了骚扰，是对分享功能的滥用。在原来的分享接口中，用户发起分享动作之后，可以通过 success 、fail、complete等回调来判断用户是否完成了最后的分享动作。通过这个能力，开发者是可以将产品交互在分享这个能力上做得比较自然和顺畅。但却被上述情形的小程序滥用。在我们权衡了分享功能带来的利弊后，我们打算回收这个能力。调整为：我们将不再支持分享回调参数 success 、fail 、complete 。即开发者无法判断用户最终是否完成了分享动作，也无法获取到分享成功后的回调参数shareTicket 。接下来将与大家介绍此次分享功能调整后，小程序的调整建议。对应小程序调整建议此次调整可能影响到两种分享功能的用法。第一种：通过判断用户最终是否有分享来做分支逻辑的小程序。例如，通过判断 success 回调触发，来判断用户是否分享出去了，进而给奖励，如果用户没有分享出去则不给奖励。这类功能是我们平台不倡导的，后续将没有办法实现。如果是需要在分享完成后变更当前页面的状态，可以适当调整交互方案。例如过去赠送代金券后显示“等待领取”等应用场景，可以改成在分享后继续保留“赠送”按钮，但提示用户一个代金券只能被一人领取，重复赠送无效。第二种：获取用户分享之后的 shareTicket ，换取群唯一标识 openGId ，进而显示对应群的相关信息的小程序。例如，部分小程序实现了群内的排行信息，通过分享小程序到某个群里，可以查看该群内成员的排行榜。此次调整后，用户分享完成后无法立刻显示该群的排行榜信息，但仍可在用户从群消息点击进入小程序时显示该群的排行榜信息。因此建议适当修改产品流程，在用户分享小程序之时，提示用户可进入群内查看群排行等信息。避免调整策略生效之后带来的交互不完整影响。调整覆盖范围提示近期新提交的版本中将会受到此策略的影响。除此之外，调整策略在即将发布的基础库版本 2.3.0 生效，该基础库版本对应本月即将发布的微信客户端版本（暂定版本号 6.7.2）。即：近期提交审核的小程序版本，在基础库版本 2.3.0 以下的环境中仍不受此策略影响，仅在基础库版本 2.3.0 以上的环境受影响。开发者需要注意，近期提交审核的版本都需要考虑兼容上述调整带来的影响，请各位开发者及时调整分享能力。", "author": "微信团队", "title": "(17)分享功能调整背后的故事", "GitHub_Star": null}
{"pub_time": "08-06", "article_content": "平视显示器（head up display）简称HUD。游戏经常在三维场景上叠加文本或二维图形信息，如弹窗，血量条等，同时需要保证它们在屏幕上的位置和大小不变。传统的H5游戏可以使用dom，或是在原本的webgl上面盖一个新的2D canvas（画布）做为HUD来实现，同时使用其接口就可以画出HUD所需要的内容。但微信小游戏只支持一个画布，无法和传统H5游戏的绘制方式一样。因此，要在3D世界中实现HUD就必须在这个唯一的画布上实现。我们在后台收到了许多反馈：如何用小游戏的框架来实现HUD的绘制。这一期的小故事，我们跟大家分享如何在微信3D小游戏中绘制HUD:本文的内容包括：1.微信小游戏只支持一个画布2.如何使用三维平面模拟HUD？3.相机变化导致HUD产生位移缩放4.如何用图形渲染管线解决上述问题？5.绘制场景时视点变化与投影阶段的问题6.如何使用顶点着色器解决上述问题？微信小游戏只支持一个画布与浏览器不同，微信客户端只有一个画布，并且不能使用html。普通H5游戏会使用html，或是创建一个新的2D canvas标签，定位在原本的webgl canvas上面，同时使用2D canvas的接口就可以画出HUD的内容。但微信小游戏不支持这样做。所以在三维世界中要实现HUD，需要在一个画布上实现。所以在三维世界中要实现HUD，则必须在这个唯一的画布上实现。如何使用三维平面模拟HUD？对于图像，webgl可以通过纹理贴图来展示图像。开发者可将图片作为的纹理贴图，贴在一个三维矩形平面上，使平面一直正对相机，来模拟HUD。对于文字，微信小游戏三维的canvas是使用webgl作为context的。但是webgl却无法像2D的context能直接画文字。开发者如果直接用webgl画出文字，需要导入文字模型的顶点数据，但由于文字比较复杂，顶点数量多，相当于渲染了一个复杂的3D物体，这种方式无论是从文件大小还是性能上，都会有损体验。那么是否可以使用2D canvas 绘好文字，再作为纹理贴在三维平面上呢？虽然微信小游戏只能渲染一个canvas，但是开发者可以创建多个的canvas实例。Step1：开发者可创建一个离屏的2D canvas，再使用2D的接口绘制文字、图片等；Step2：开发者可将这个离屏canvas传给webgl，当成一个texture，贴到一个三维的平面物体上，使其永远都在相机的正前方，通过这样模拟HUD 。补充webgl支持直接将canvas作为纹理；void gl.texImage2D(target, level, internalformat, format, type, HTMLCanvasElement? pixels)。相机变化导致HUD产生位移缩放游戏场景中的相机是会改变的，比如说吃鸡游戏中的第一人称和第三人称视角转化。我们发现了一个问题：当相机的可视范围变化的时候，HUD就会发生形变。那是因为视野看的越广，映射到屏幕上的时候，同一个物体就显得越小。我们需要保证HUD在任何视角下位置大小都是正确无误的。那么如何才能做到呢？要解决这个问题就需要明白计算机是如何把三维场景画到二维的屏幕上的。这个画的过程也就是计算机图形渲染管线帮我们完成的。如何用图形渲染管线解决上述问题?画一个三维物体到二维平面可以分为三个阶段：●“准备数据” （应用程序阶段）●“画点” （几何阶段）●“画像素” （光栅化阶段）一个HUD实际上是一个矩形的平面物体，通过矩形的4个顶点就可以描述出来一个平面的位置、大小。为了让平面的位置，大小看起来没问题，我们需要修改“画点”阶段的逻辑。这个阶段又可以进行如下的细分。与摄影机相关的逻辑，是视点变换还有投影阶段。我们可以通过修改这两者的逻辑来达到我们的目的。绘制场景时视点变化与投影阶段的问题1.视点变化阶段的问题我们需要绘制摄像机看到的世界，而摄像机可以处在任意位置观察这个世界。视点变化本质是就是根据摄像机看的方向来旋转物体，从而让三维空间的物体正确旋转到观察者看到的样子。原本是摆正放的物体，由于观察者的视角问题（歪着看），所以显示出来物体最终也是歪的。通过在应用程序阶段定义相机的视点、观察目标点以及上方向等数据，我们可以得到一个叫做视图矩阵（View Matrix）的矩阵。把这个矩阵与物体的位置做矩阵乘法就可以得到物体变化后的新位置。因为游戏世界中，摄像机的位置是不停变化的，而我们的物体却需要一直出现在摄像机正前方。所以游戏场景中的视觉矩阵（View Matrix）在每一帧的渲染中，可能都在变化。这里我们只要将HUD原本一直在变化的视觉矩阵（View Matrix）替换为我们需要的，并且保持不变就好了。2.投影阶段的问题投影其实是把透视摄像机原本的可视范围，压缩成一个单位立方体。再通过屏幕映射，就会出现如下的效果出来。这一个过程中，会通过摄像机定义的数据（比如长宽比，视场，近截面，远截面），来生成一个叫做投影矩阵（Projection Matrix）的矩阵。将这个矩阵与位置信息进行矩阵乘法，再进行一些归一化操作，就会得到单位立方体内的位置。和视觉矩阵（View Matrix）一样，对于HUD的物体，我们也不能使用透视摄像机生成的矩阵，否则就会可能导致大小变化。我们替换成正视摄像机的矩阵。这样算出来的位置就是永远都是正常的，不需要担心游戏中更新了相机的数据。如何使用顶点着色器解决上述问题?现在我们要用顶点着色器来修改视点变换还有投影的逻辑。顶点着色器与片元着色器都是 webgl 提供给我们用来操作渲染管线的能力。让我们可以使用glsl 这种编程语言来对 GPU 的能力进行编程。顶点着色器运行在“画点”阶段（几何阶段），也就是对每个三维物体的顶点进行计算。片元着色器运行在“画像素”阶段（光栅化阶段），把顶点围起来的像素（其实是片元）画上颜色。我们可以通过顶点着色器，修改视点变换与投影的逻辑，最后达到我们的效果。总结由于微信小游戏支持一个单独的画布，开发者想要在任何游戏场景下绘制正常的HUD，可以通过顶点着色器的能力，去修改视点变换与投影的所用到的矩阵，最终来解决这个问题。微信小游戏还有很多与H5游戏、客户端游戏不一样的设计理念与特点，我们会在后续的文章里继续分享微信小游戏背后的小故事。历史文章回顾 ：小程序•小故事如果大家有想了解的小程序相关能力的故事，欢迎在评论区留言，我们后续会考虑将这些能力背后的故事分期分享给大家。", "author": "微信团队", "title": "(18)微信3D小游戏下HUD绘制的经验分享", "GitHub_Star": null}
{"pub_time": "08-21", "article_content": "文件系统能力文件系统能力可便于用户在客户端保存文件资源，并在下次启动客户端之后可以使用已保存的文件。只要用户不主动删除小程序或小游戏，并保持一定的使用频率，文件都可以一直被保留。合理的使用文件系统能力来缓存资源文件，可以给开发者更好的使用体验。今天，我们来分享文件系统能力的小故事。1文件系统的演进历史小程序在最早发布的版本中就已提供了最基础的文件存储和删除接口：wx.saveFile、 wx.removeSavedFile ；对于绝大部分的小程序来说，这两个接口已经能够满足开发者的需求。但对于小游戏来说，需要更完整的能力来做支撑。因此，发布小游戏的时候我们便提供了一套更完整的文件管理系统：FileSystemManager，其中主要包含了目录管理、文件内容读写等能力。2文件系统的设计背景文件系统能力是应小游戏开发需求的迭代而逐步增强的。在小程序的场景下，很多时候只是需要把一个图片或视频资源缓存起来便可继续使用，文件内容与文件存储的目录结构都不是开发者所关心的。但是在小游戏场景下情况则不同——一方面，小游戏除了有图片和视频文件、还有游戏引擎生成的配置文件，游戏需要能够去读取并理解配置文件的具体内容；另一方面，游戏使用的资源文件会比普通小程序更多，若没有内容目录管理的功能，维护成本会变高。除此之外，由于小游戏代码包大小限制只有4MB (加上分包最多8MB)，对于一些偏重的游戏，资源甚至容易超100MB。因此在此大背景下，我们给文件系统主要增加了目录管理、文件内容读写等两项接口——目录管理的需求场景是在使用游戏引擎时需要按目录来管理资源文件，文件内容读写的需求场景是在使用游戏引擎时需要读取配置文件；同时，我们对小游戏类目的本地存储容量的规范限制扩容到50MB。开发者可能会疑惑，为什么在小程序的文件系统中会有一些功能相接近的接口？例如，想缓存一个文件，可以用 saveFile 或 copyFile ；再比如 removeSavedFile和 unlink 都可以用来删除一个文件。上述情况的原因是我们在早期便提供了基础的文件存储接口 saveFile 和removeFile ，但不提供自定义目录相关的能力，开发者调用 saveFile 之后只能得到微信返回到的一个随机文件名。小游戏应运而生的同时也增强了对文件系统能力扩展的需求，为了保证向后兼容，我们保留了这批基础接口，并在这个基础上增加了目录管理接口以及对应的文件操作接口。因此，便出现了上述一些相似接口的情况。3文件系统的优势—存储隔离有不少开发者询问过关于文件存储的问题，他们担心文件内容被其他小程序读取到，也担心多个登录用户之间的文件内容会互相影响。为了保证用户的隐私安全，也为了保证小程序的数据安全，本地文件存储的一个重要规则便是保证隔离。文件被存储到本地后，会以小程序账号和用户账号两个不同的维度来区分和隔离。即：同个微信用户使用不同小程序之间的文件存储会互相隔离；不同微信用户（在同一台手机中）使用同个小程序时，不同用户间的文件存储也会互相隔离。4适当的存储容量考虑到存储的问题，我们规范了小游戏文件存储的容量。普通小程序是10MB，小游戏则是50MB，当文件存储超出限制时，写入的文件会失败。功能上线以后，我们曾收到过若干宝贵意见与反馈，希望能提高容量限制。但在经过反复论证与评估后，我们认为如果将文件存储的容量再往上提，就会有用户新增需要管理或清理手机存储空间的需求，小程序和小游戏将会变得不再“小”了。对于资源文件超过上述标准限制的小程序与小游戏，应该合理地管理本地文件，及时清理不常用的文件，这样在大多数情况下，手机存储空间便能保证顺畅。更多关于小程序文件系统能力的信息，可查阅 接口文档 。", "author": "微信团队", "title": "(19)文件系统能力", "GitHub_Star": null}
{"pub_time": "04-16", "article_content": "上月底，「WeGeek 微信小程序开发大赛」进入了「赛前培训」阶段，许多有学习需求的小程序开发者们，都自由选择参与了小程序培训课程，学习了一手的小程序开发经验。现在，「WeGeek 微信小程序开发大赛」正式进入「线上初赛」阶段了！大赛赛题与细则也已在大赛官网公布。本次大赛由入驻的品牌根据自身行业的需求和痛点出题，通过微信团队梳理，也体现着小程序的产品价值，通过的题目成为首届大赛的公开题目。大赛有电商、金融、时尚、快消、企业应用、小游戏等 8 个赛题，将开发者、商户和用户的场景需求紧密联系在一起，既考验开发者的系统开发能力，也体现出开发者的运营思维与商业服务意识。初赛截至5月7日，参赛的开发者可以选择一个选题提交参赛作品，优胜作品可进入 5 月 26 日的线下决赛，瓜分百万现金大奖！﻿赛题1:世界杯互动小程序借助世界杯期间 VIVO 非凡摄影师的摄影素材，设计互动型小程序，形成互动社交传播。赛题2:信用卡服务小程序结合浦发信用卡元素，构造一款拥有粘度、有效传播方式、较高可玩性或非持卡用户高效转化能力的小程序。赛题3:时尚品牌新型电商小程序结合 Folli Follie 品牌特色和目标人群特征，构造时尚品牌新型电商小程序。赛题4:健康工具小程序构造一款工具小程序，以建立安佳品牌与健康生活方式的关联，服务用户的同时传递安佳品牌关注营养，关爱消费者健康的理念。赛题5:跨境电商小程序建立一个服务澳洲品牌，面向中国消费者的直邮海淘电商渠道。赛题6:快消品牌 CRM 小程序通过微信小程序连接消费者，与消费者形成积极互动关系，打通找学产品知识、体验、购买、售后等多个环节，并最终完成电商销售闭环。赛题7:微信开放题——企业应用场景小程序探索企业经营和内部管理场景，针对某个垂直行业或领域构造一款优化企业内部管理或满足企业间交互需求的企业应用小程序。赛题8:微信开放题——微信小游戏设计一款特定玩法的微信小游戏，加入特定的主题背景元素，充分利用微信社交能力，为用户带来独特的微信小游戏体验。 每个赛题将选出 3 个作品进入决赛  总共 24 个团队进入总决赛  最终将有 8 个团队瓜分百万大奖 更多赛题详情描述、比赛规则、评选规则等信息，请前往 WeGeek 小程序 查看。「微信极客WeGeek」接下来还将从小程序开发者中收集反馈，并对赛题做 Q&A 解答。大赛详情&报名通道▽WeGeek 小程序▽扫描上方小程序码即可报名「WeGeek 微信小程序开发者大赛」的官方赛事运营发布平台，为大赛开发者与合作机构提供报名入口。同时，为开发者提供在线培训、提交作品以及颁发证书等服务。赛事进程线上初赛2018 年 4 月 16 日～5月 7 日公布比赛课题、细则，提交作品线下决赛5月 26 日公布决赛名单，线下路演比拼", "author": "微信团队", "title": "「WeGeek 开启线上初赛」，百万奖金召集最强小程序开发者", "GitHub_Star": null}
{"pub_time": "09-29", "article_content": "在微信小程序/小游戏的开发中，网络传输主要是依靠http的短连接和webSocket 长连接来完成的。在一般web服务中，大多使用短连接来向服务器请求资源，与服务器的交互频率低，次数少。而在一些需要与服务器交互频繁，需要及时收到服务器推送的场景，比如直播、多人实时游戏，更适合使用 webSocket 进行通讯。这次的小故事主要分享 webSocket 在微信小程序/小游戏开发上的一些经验。长连的生命周期介绍webSocket的生命周期一共有4个状态：connecting、open、closing、closed。我们可以通过 socketTask 的 readyState 属性来获取当前 webSocket 长连的状态。webSocket 的生命周期过程和 API 间的调用关系可以简单的入下图所示。注意：只有长连处在 open 状态，才能够正常的收发消息，其他状态均会报错。客户端长连的断开机制当小游戏进入到后台运行超过5秒时，客户端会禁止小游戏的所有网络连接。这是一个非常频繁的断线逻辑，十分考验程序断线错误处理逻辑。建议大家可以在用户点击右上角按钮退出小程序/小游戏时，主动帮用户断线，待用户切回时再重接上去。 当 webSocket 长连超过一段时间没有任何网络传输时，客户端会主动关闭这条长连，以节省资源。开发者可以设置业务心跳，每隔一段时间与后台进行一次通讯，维持长连。如何选择长连的接口API接口主要有两类，一类是前缀为 “wx” 的接口，一类 “socketTask” 的接口。举例，同样是连接长连后发送一条消息，两种写法区别如下。最初小游戏只允许存在1个 webSocket 连接时，并没开放 socketTask 的管理方式。随着小游戏的能力提升，可支持同时存在的 webSocket 连接个数变多，在使用 wx.connectSocket 创建 webSocket 连接时会返回 socketTask 任务对象，便于去管理每一条连接链路。 推荐开发者尽量使用 socketTask 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控。同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。例如：当存在多条连接时，wx.onSocketOpen、wx.sendSocketMessage、wx.onSocketMessage 等接口会只作用于第一条连接的长连。且wx.onSocketOpen 接口不能多次注册 webSocket 长连的回调函数，仅最后一次生效。使用 socketTask 任务的方式则不会出现上述问题。开发与调试的建议01微信提供了 webSocket 最基础的接口能力，开发者可以在其基础上进行封装，根据业务需要扩展能力。比如封装一个 offSocketOpen 的方法来取消注册 socketOpen 的回调函数。02长连并没有像短连那样“一问一答”的交互形式。在某些场景下，开发者需要这种与服务器的交互。建议前端与后台协议，每条客户端上行的信息，服务器都下发一个对应的回包，去“模拟短连”。比如开发者向服务器询问1+1和1+2等于多少，服务器返回了3和2，便可清晰知道哪一个数字对应着哪一个请求的答案。此外，还可以设置业务超时逻辑，便于判断上传是否丢包03在 webSocket 发送数据时，数据格式可以选择string或者ArrayBuffer。这里要注意的是，由于小游戏禁止了 Function() 和 eval()语法。所以像 protobufjs 这类用了这些语法的库是不能直接拿来用的。04在测试调试长连的时，目前开发者工具不支持通过设置 offline 模拟长连断网的情况（短连是支持的），所以在测试断线重连的一些情况时，可以辅助一些第三方工具，或者用真机调试以及“拔网线”的方式来测试。05在进行多人游戏测试时，在开发者工具中熟练使用“自定义编译条件”，以及“多账号调试”这两个功能可以极大的提升开发测试效率。06长连占用的系统资源，会导致手机发热比较明显。所以在不需要使用 webSocket 的场景下，建议及早断开长连，需要时再连接。异常断线的监控监控长连是否异常断线，在长连的使用中，尤其在小游戏多人对战中是尤为重要的。socketError 事件并不能认为是异常断线。首先 socketError 事件并不一定会导致断线，其次若是由客户端机制断开的长连，是不会触发 socketError 事件的。 最简单的方式可以通过 onClose 回调函数触发时系统传入的 code 是否为1000来判断。当然开发者自身也可以通过代码判断是否是自身调用的 close 函数触发的 onclose 事件，监控异常断线。希望大家在实际应用中能帮助到到大家。", "author": "微信团队", "title": "(20)长连开发经验分享", "GitHub_Star": null}
{"pub_time": "10-14", "article_content": "在「小程序 · 小故事」的第一期，我们曾和大家一起分享过「分包加载」的故事。随着小程序功能越来越多样，页面也越来越多，但不同页面的访问频率是有一定差异的。分包加载允许开发者将小程序划分为主包和若干个分包，将较少用到的页面或功能划分到若干个分包中，主包内只保留最频繁使用的页面和公共的代码。小程序启动时默认只加载主包，再按需加载分包。这一机制保证了在小程序包大小增加的情况下，依然能保持良好的启动速度。为满足小程序承载的功能不断丰富的需要，小程序的代码包大小上限已提高到 8M。随着小程序应用场景和使用范围的扩大，在实践中，我们发现分包加载仍有一定的局限性。尤其是越来越多的 H5 服务迁移到小程序后，对于小程序的启动速度有更高要求。为了更好的提升小程序的加载速度和使用体验，小程序近期开放了「独立分包」和「分包预下载」两个新的能力，进一步丰富了分包加载的功能和使用场景。01独立分包1 技术背景由于技术实现的差异，小程序首次启动时需要进行代码包的下载，因此在启动性能上与网页相比有一定劣势。通过对小程序启动耗时的分析，我们发现代码包大小对小程序启动速度是有最直接的影响。一方面，代码包越大，下载时间就越长；另一方面，代码包越大，通常意味着小程序页面结构和代码逻辑复杂，启动时代码注入执行的时间越长。采用分包加载一定程度上解决了代码包下载耗时过长的问题。但小程序中的某些场景（如广告页、活动页、支付页等），通常功能不是很复杂且相对独立，对启动性能有很高的要求。在现有方案中，启动这一页面需要依赖整个主包的下载，如果页面在分包中，还需等待分包的下载，启动性能有严重的瓶颈。此时如果依赖开发者进行代码重构，重新分包，不仅工作量大，而且会影响其他分包的使用体验。为了解决这一问题，我们提出了「独立分包」方案。2 功能简介独立分包是小程序中一种特殊类型的分包，可以独立于主包和其他分包运行。从独立分包中页面进入小程序时，不需要下载主包。当用户进入普通分包或主包内页面时，主包才会被下载。开发者可以将部分对启动性能要求很高的页面放到特殊的独立分包中。当小程序从独立分包页面启动时，只需要下载分包就可以直接运行，可以很大程度上提高分包页面的启动速度，实现小程序的秒开。由于小游戏中没有页面的概念，也没有小程序中多种入口的使用场景，因此小游戏目前没有支持独立分包。3 配置方法独立分包的配置方法十分简单，只需要在原有分包配置的基础上定义 independent 字段，即可将一个分包设置为独立分包，例如：4 使用限制独立分包虽然属于分包的一种，但其不依赖主包独立使用，因此在加载流程和运行环境上与普通分包相比有一些差异。除了分包本身的限制外，独立分包还有以下限制：● 独立分包中不能依赖主包和其他分包中的内容，包括 js 文件、模板、wxss、自定义组件等；● App 只能在主包内定义，独立分包中不能定义 App，会造成无法预期的行为；●  独立分包中暂时不支持使用插件。为了小程序有更好的使用体验，我们不建议开发者把过多的小程序逻辑放置到独立分包中，也不建议在小程序中过度的使用独立分包，例如把每个页面都放到一个独立分包中。关于独立分包的详细内容请参见 独立分包 · 小程序02分包预下载1 技术背景在使用「分包加载」后，虽然能够显著提升小程序的启动速度，但是当用户在使用小程序过程中跳转到分包内页面时，需要等待分包下载完成后才能进入页面，造成页面切换的延迟，影响小程序的使用体验。分包预下载便是为了解决首次进入分包页面时的延迟问题而设计的。如果能够在用户进入分包页面之前就预先将分包下载完毕，那么进入分包页面的延迟就能够尽可能降低。此前，小游戏中已经提供了「基于API」的分包预下载能力。在设计小程序分包预下载能力时，我们设计了「基于配置」和「基于API」两种分包预下载形式，「基于配置」的方式使用简单，且便于对预下载的使用情况进行控制，防止开发者滥用；「基于API」的方式使用起来更灵活，能够动态的调整预下载策略。综合考虑用户的使用感受和内测阶段第三方开发者的反馈后，我们最终决定首先推出「基于配置」的分包预下载能力。2 功能简介开发者可以预先配置某个页面可能会跳转到的分包（对于独立分包，也可以预下载主包），在进入小程序某个页面时，由基础库在后台自动预下载可能需要的分包。用户在进行页面跳转时，分包通常已经下载完成，不需要额外等待，可以有效提升进入后续分包页面时的启动速度。此外，考虑到用户的流量和存储空间，小程序也会对预下载的大小和网络进行一定的限制。3 配置方法开发者可以通过在 app.json 中增加 preloadRule 字段，控制进入某个页面时进行预下载的分包，并设置触发预下载的网络环境。4 使用限制对于手机用户而言，数据流量和存储空间是非常重要的资源。一方面，分包预下载能够提升小程序用户的使用体验；另一方面，过度的预下载也会破坏分包按需使用的原则，过度的占用用户的存储空间，消耗数据流量。如果开发者每次启动小程序时都将所有分包进行下载，会消耗很多不必要的流量和存储空间。为了在分包预下载的效果和对用户资源的消耗上取得平衡，我们限制了同一个分包中的页面预下载总大小不得超过2M，并鼓励开发者按需设置分包预下载的网络条件。关于独分包预下载详细内容请参见 分包预下载 · 小程序03小结独立分包与分包预下载进一步丰富了分包加载的功能，大大拓展了分包加载的使用场景。同时，独立分包和分包预下载是相辅相成的，配合使用可以获得更好的效果。例如，开发者可以将一个活动推广页放到一个独立分包中，利用独立分包的特性能够提升活动页面的加载速度，提升转化率。在页面中开发者可以引导有需要的用户跳转到小程序其他页面，使用小程序的更丰富的功能。在这一过程中，可以利用分包预下载能力，将主包或相关分包进行预下载，降低页面跳转的延迟，留住更多用户。开发者在使用这两个新能力的过程中，如果遇到问题或者有什么建议，欢迎在微信开放社区（https://developers.weixin.qq.com）进行反馈，我们会根据开发者的反馈，不断的优化和丰富分包加载功能，减少功能限制，提升小程序的加载性能和使用体验。", "author": "微信团队", "title": "(21)独立分包与分包预下载", "GitHub_Star": null}
{"pub_time": "04-16", "article_content": "F2，专为移动而生的可视化解决方案，特为大家提供了微信小程序端版本，体积小巧，性能卓越，底层基于图形语法，可以提供非常丰富的图表类型。可以使用微信扫描以下二维码先体验一番：wx-f2\nF2 的微信小程序版本，支持原生 F2 的所有功能，欢迎使用反馈。\n快速体验\n\n微信扫码体验\n\n<img src=\"https://gw.alipayobjects.com/zos/rmsportal/wmRJtPHkkoimGbPCeScc.jpg\" width=\"344\">\n\n使用微信开发者工具打开此项目\n\n文档结构\n本项目参考了 echarts-for-weixin 的封装思路，即封装一个自定义组件 <f2-canvas>，方便用户使用，该组件位于 /f2-canvas 目录下。\n微信小程序自定义组件结构和使用请参考: 自定义组件\n以下是目录结构说明：\n├── f2-canvas                    // f2-canvas 组件        \n│   ├── f2-canvas.js\n│   ├── f2-canvas.json\n│   ├── f2-canvas.wxml\n│   ├── f2-canvas.wxss\n│   └── lib                      // f2-canvas 组件依赖的类库\n│       ├── EventEmitter.min.js  // 事件发射器，用于监听、触发事件， 3.1K\n│       ├── f2.js                // f2 脚本（压缩），155K\n│       └── renderer.js          // f2 专为适配微信小程序绘图上下文 context 而封装的伪 Canvas\n├── pages                        // f2-canvas 组件使用示例\n│   \n\n下载\n由于目前微信小程序中不支持通过 npm install 来安装第三方的工具库，所以需要将本项目中的 /f2-canvas 文件夹拷贝到自己的项目中以便使用。\n注意\n/f2-canvas/lib/ 目录下的 f2.js 文件默认我们会保证它始终为 F2 最新稳定版。如有必要，也可以由用户自己编译（如要使用 F2 的按需加载）替换。\n快速开始\n下面我们就开始使用 f2-canvas 组件来绘制图表吧，这里假设用户已经初步了解微信小程序的基础框架，如不了解，请先阅读官网教程： 官方教程。\n以绘制柱状图为例：\n<img src=\"https://gw.alipayobjects.com/zos/rmsportal/aDmzXXwkPmUFLCXwXBvo.gif\" width=\"332\">\n\n\nSTEP 1：在 pages 目录下新建 column 目录，该目录需要包含以下几个文件：\n\nindex.js\nindex.json\nindex.wxml\nindex.wxss\n\n各个文件的内容如下：\n\nindex.json 配置文件，引入 f2-canvas 组件，这里需要注意路径要正确，由于微信小程序组件名不允许包含数字，所以这里将其命名为 ff-canvas\n\n// index.json\n{\n  \"usingComponents\": {\n    \"ff-canvas\": \"../../../f2-canvas/f2-canvas\"\n  }\n}\n\n\nindex.wxml 视图，使用 ff-canvas 组件，其中 opts 是一个我们在 index.js 中定义的对象，必设属性，它使得图表能够在页面加载后被初始化并设置，详见 index.js 中的使用。\n\n<!--index.wxml-->\n<view class=\"container\">\n  <ff-canvas id=\"column-dom\" canvas-id=\"column\" opts=\"{{ opts }}\"></ff-canvas>\n</view>\n\n\nindex.js 逻辑处理，这里还需要引入 F2 用于绘制图表，结构如下，注意路径正确。\n\n// index.js\nimport F2 from '../../../f2-canvas/lib/f2';\n\nlet chart = null;\n\nfunction initChart(canvas, width, height) { // 使用 F2 绘制图表\n  const data = [\n    { year: '1951 年', sales: 38 },\n    { year: '1952 年', sales: 52 },\n    { year: '1956 年', sales: 61 },\n    { year: '1957 年', sales: 145 },\n    { year: '1958 年', sales: 48 },\n    { year: '1959 年', sales: 38 },\n    { year: '1960 年', sales: 38 },\n    { year: '1962 年', sales: 38 },\n  ];\n  chart = new F2.Chart({\n    el: canvas,\n    width,\n    height\n  });\n\n  chart.source(data, {\n    sales: {\n      tickCount: 5\n    }\n  });\n  chart.tooltip({\n    showItemMarker: false,\n    onShow(ev) {\n      const { items } = ev;\n      items[0].name = null;\n      items[0].name = items[0].title;\n      items[0].value = '¥ ' + items[0].value;\n    }\n  });\n  chart.interval().position('year*sales');\n  chart.render();\n  return chart;\n}\n\nPage({\n  data: {\n    opts: {\n      onInit: initChart\n    }\n  },\n\n  onReady() {\n  }\n});\n\n\n\n由于 f2-canvas 组件主要是对小程序的画布上下文和 html5 canvas 的上下文进行了适配以支持 F2 在小程序端的渲染，所以 F2 能绘制什么图表，小程序端就能绘制什么图表，使用时也只需按照 F2 的语法来写即可。\n本项目只展示了部分 demos，更全的见 AntV F2。\n需要注意的是，在创建 chart 的时候，需要使用 'el' 属性来指定容器，对应 this.data.opts.onInit 方法形参中的 canvas 属性，另外该方法还会返回 width, height 属性分别对应画布的宽和高。\nchart = new F2.Chart({\n  el: canvas,\n  width,\n  height\n});\n\n不支持的功能\n目前由于小程序不支持 document，所以 Guide.Html 辅助元素组件目前仍无法使用，其他 F2 的功能全部支持。\n微信版本要求\n\n微信版本 >= 6.6.3\n基础库版本 >= 1.9.91\n\n如何贡献\n如果您在使用的过程中碰到问题，可以先通过 issues 看看有没有类似的 bug 或者建议。\nLicense\nMIT license", "author": "章伟星", "title": "微信小程序图表组件 wx-f2，源于 F2，专为移动而生", "GitHub_Star": "389"}
{"pub_time": "07-18", "article_content": "Coc 现已全面支持小程序开发，支持 javascript, wxml，wxss, json 全部 4 中文件类型。文档地址：https://github.com/neoclide/coc.nvim/wiki/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E6%94%AF%E6%8C%81Javascript 支持Coc 使用 tsserver 支持 javasciprt LSP 能力， 小程序开发时需要复制一份 wx.d.ts 到项目下的任意目录下(使用 minapp 框架开发可免去此步)。快捷命令：wget https://raw.githubusercontent.com/qiu8310/minapp/master/packages/minapp-generator/gen/api/wx.d.tsCoc 的 Tsserver 支持以下功能：Wxml 支持使用模块 wxml-langserver, 支持：智能补全wxml 验证文档查看Wxss 支持使用模块 vscode-css-languageservice, 支持：wxss 验证智能补全文档查看等除了 findColorSymbols 以及 getFoldingRanges 的功能。Json 支持使用模块 vscode-json-languageserver, 支持：Json 验证智能补全文档查看等功能。Coc 会通过 project.config.json 文件判定小程序环境，对应 json 文件（app.json 以及 page.json）会自动映射 json schema，无需手工添加。readme not found", "author": "启明", "title": "Coc.nvim 全面支持小程序开发", "GitHub_Star": "624"}
{"pub_time": "05-31", "article_content": "Touch UI 部分案例介绍TouchUI是一套高质量移动端UI框架。基于vue.js框架，我们精心打造了上百种的移动端UI组件，几乎囊括了开发移动应用的所有细节，真正实现拿来即用，像搭积木一样开发移动应用。同时，我们还提供了TouchUI的微信小程序版本：TouchUI-WX。它是一套完全免费的微信小程序开发框架，包含丰富的UI控件用于官方组件的补充。还可以与TouchUI相互转换，实现开发一套代码，发布H5和微信小程序两种应用。亮点它与mpvue、wepy等最大的区别在于：组件完全是基于小程序官方的自定义组件机制实现，开发时直接输出为微信小程序工程源代码，而不是读不懂的编译代码。这样好处在于：1、开发者迁移成本很小。可以轻松的将已有的小程序移植为TouchUI-WX工程，来使用它的扩展能力；2、便于排查错误。当遇到问题时，开发者也可以随时查看输出的小程序原始代码来定位问题所在。不会搞不清楚到底是框架问题还是自己代码的问题；3、按需编译由于小程序对体积有限制，在使用框架开发时，只有使用到的组件才会编译输出为小程序源码。没用到的不会输出。4、不会对框架产生依赖。以后不想用了这套框架，可以直接对已经输出的小程序工程进行维护GitHub地址https://github.com/uileader/touchuiwxDemoreadme not found", "author": "Frank", "title": "Touch UI - 基于vue的高质量UI框架，一套代码发布为小程序和H5", "GitHub_Star": "1211"}
{"pub_time": "2017-10-24", "article_content": "Linux微信web开发者工具 可在linux桌面环境跑起微信开发者工具,原理是微信开发者 工具本质是nw.js程序,把它移植到linux下没大问题.然后,负责编译wxml和wxss(可能还有 其他功能)的wcc和wcsc,利用wine来跑皆可.Linux微信web开发者工具\nlinux下使用微信web开发者工具.\n\n\nDescription\nLinux微信web开发者工具 可在linux桌面环境跑起微信开发者工具,原理是微信开发者\n工具本质是nw.js程序,把它移植到linux下没大问题.然后,负责编译wxml和wxss(可能还有\n其他功能)的wcc和wcsc,利用wine来跑皆可.\n\n2017/03/28 更新:微信小程序升级到0.15.152800\n2017/03/30 更新:微信小程序升级到0.15.152900\n2017/05/18 更新:微信小程序升级到0.17.170900\n2017/05/19 更新:微信小程序升级到0.17.171900\n2017/05/29 更新:微信小程序升级到0.17.172600\n2017/06/23 更新:微信小程序升级到0.18.182200\n2017/07/11 更新:微信小程序升级到0.19.191100\n2017/07/26 更新:微信小程序升级到0.20.191900\n2017/08/20 更新:微信小程序升级到0.21.201800\n2017/09/25 更新:微信小程序升级到0.22.203100\n2017/09/01 更新:微信小程序升级到1.01.170831\n2017/09/18 更新:微信小程序升级到1.01.170913\n2017/09/27 更新:微信小程序升级到1.01.170925\n2017/10/14 更新:微信小程序升级到1.01.171013\n2017/10/28 更新:微信小程序升级到1.01.171019\n2017/11/02 更新:微信小程序升级到1.01.1711020\n2017/11/02 更新:nw.js升级到0.24.4\n2017/11/17 更新:微信小程序升级到1.01.1711160\n2017/12/04 更新:微信小程序升级到1.01.1712070\n2018/01/01 更新:微信小程序升级到1.01.1712150\n2018/01/08 更新:微信小程序升级到1.02.1801081 支持小游戏开发\n2018/02/04 更新:微信小程序升级到1.02.1802021\n2018/02/21 更新:微信小程序升级到1.02.1802080\n2018/03/09 更新:微信小程序升级到1.02.1802270\n2018/03/14 更新:微信小程序升级到1.02.1803130\n\n更新到最新版\n\n执行脚本会自动下载安装最新开发者工具（window x64）\n\n安装httpie,以下是Ubuntu安装方法,其它参考https://httpie.org/doc#linux\nsudo apt install httpie # 脚本依赖httpie\n\n./bin/update_package_nw.sh # 执行更新\n\n\n\n安装过程中确认安装到$HOME/.wine/drive_c/Program Files (x86)/Tencent/微信web开发者工具路径下\n\n\n最后完成去掉打开开发者工具的钩\n\n\n然后执行./bin/wxdt，如果没有问题欢迎提PR~\nUsage\ngit clone git@github.com:cytle/wechat_web_devtools.git\ncd wechat_web_devtools\n./bin/wxdt\n\n需要小程序开发\n\n用下面的命令安装wine(ubuntu下)\n\n推荐安装1.8或1.6版本的wine\nsudo apt install wine\n\n\nwcc.exe和wcsc.exe是32位的,用下面命令创建32位环境\n\nWINEARCH=win32 WINEPREFIX=~/.wine32 winecfg\n\n\n安装\n\n./bin/wxdt install\n\n\n启动\n\n./bin/wxdt\n\n更新\n直接pull就好了\ngit pull origin\n\n如果wcc和wcsc编译有问题，执行以下，让工具重新生成wcc和wcsc，会删除开发者工具配置文件,所有工程和登录信息会消失\n./bin/wxdt uninstall\n./bin/wxdt install\n\n截图\n\n\n上面项目来自wechat-v2ex\n卸载\n\n关闭微信web开发者工具\n项目文件夹下运行./bin/wxdt uninstall(删除桌面图标、微信web开发者工具配置目录)\n删除项目文件夹\n\n其它\n免责声明\n微信开发者工具版权归腾讯公司所有，本项目指在交流学习之用，如有不当之处，请联系本人，邮箱：canyoutle@gmail.com", "author": "炒饭", "title": "Linux微信web开发者工具", "GitHub_Star": "1263"}
{"pub_time": "10-07", "article_content": "uni-app 是一个使用 Vue.js 开发跨平台应用的前端框架。开发者通过编写 Vue.js 代码，uni-app 将其编译到iOS、Android、微信小程序H5等多个平台，保证其正确运行并达到优秀体验。uni-app 继承自 Vue.js，提供了完整的 Vue.js 开发体验。uni-app 组件规范和扩展api与微信小程序基本相同。有一定 Vue.js 和微信小程序开发经验的开发者可快速上手 uni-app ，开发出兼容多端的应用。uni-app提供了条件编译优化，可以优雅的为某平台写个性化代码、调用专有能力而不影响其他平台。uni-app打包到App时仍然使用了html5+引擎，html5+的所有能力都可以在uni-app中可以使用。在App端运行性能和微信小程序基本相同。对于技术人员而言：不用学那么多的平台开发技术、研究那么多前端框架，学会基于vue的uni-app就够了。对于公司而言：更低成本，覆盖更多用户，uni-app是高效利器。uni-app\nuni-app 是一个使用 Vue.js 开发跨平台应用的前端框架。\n开发者通过编写 Vue.js 代码，uni-app 将其编译到 iOS、Android、微信小程序等多个平台，保证其正确运行并达到优秀体验。\n文档\nuni-app 文档\n需求墙\nuni-app计划支持的功能点，会在需求墙上进行展示，并允许开发者对需求进行投票，投票越多的需求，研发优先级越高，前往投票。\n项目案例\nHello uni-app：演示 uni-app 框架的组件、接口、模板，你可以使用手机扫描下方App码下载 iOS、Android 原生安装包，也可以使用微信扫描小程序码，体验 Hello uni-app 的小程序版本：\n<p align=\"center\">\n<img src=\"https://img-cdn-qiniu.dcloud.net.cn/img/ipe.png\" width=\"450\"/>\n</p>\n更多项目征集\n分享交流\n\ngithub：uni-app\nask社区：ask.dcloud.net.cn\nQQ群：\n\n531031261\n901474938\n\n\n\n除了合理利用 issues，向我们反馈问题或建议外。更佳的渠道是前往 DCloud 问答社区，详细描述问题及重现步骤，并且附上一定的示例代码或项目。\n赞助我们\n一个手艺人需要3万个粉丝养活，欢迎大家积极赞助uni-app，保证 uni-app 稳定健康持续发展。", "author": "Samuel", "title": "小程序可以打包App了， 基于Vue的多端开发框架uni-app", "GitHub_Star": "1352"}
{"pub_time": "2017-09-20", "article_content": "wxapp-market 是一套好用、易扩展的小程序营销组件, 支持大转盘、刮刮乐、老虎机、水果机、九宫格翻纸牌、摇一摇、手势解锁等多种营销玩法。小程序营销组件\n小程序营销组件， Marketing components for WeChatApp\n支持营销玩法\n\n大转盘\n刮刮乐\n老虎机\n水果机\n九宫格翻纸牌\n摇一摇\n手势解锁\n\n如何使用\n1.拉取仓库\ngit clone git@github.com:o2team/wxapp-market.git\n\n2.查看组件文件\n\n大转盘 (Big wheel) : /components/wheel/\n刮刮乐 (Scratch tickets) : /components/scratch/\n老虎机 (Slot machine) : /components/slotMachine/\n水果机 (Fruit machine) : /components/fruitMachine/\n九宫格翻纸牌 (Grid card) : /components/card/\n摇一摇 (Shake) : /components/shake/\n手势解锁 (Gesture lock) : /components/lock/\n\n3.使用引入方式\n➀ 使用大转盘组件\n\n\nWXSS中引用样式：@import \"../../components/wheel/wheel.wxss\"\n\n\nWXML中引用结构：<import src=\"../../components/wheel/wheel.wxml\"/>\n\n\nJS中引用：import Wheel from \"../../components/wheel/wheel.js\"\n\n\nJS中实例调用：\n\n\n  new Wheel(this,{\n    areaNumber: 8,   //抽奖间隔\n    speed: 16,       //转动速度\n    awardNumer: 2,   //中奖区域从1开始\n    mode: 1,         //1是指针旋转，2为转盘旋转\n    callback: (idx, award) => {\n      //结束回调， 参数对应宫格索引，对应奖项    \n    }\n  })\n\n➁ 使用刮刮乐组件\n\n\nWXML中引用结构：<import src=\"../../components/scratch/scratch.wxml\"/>\n\n\nJS中引用：import Scratch from \"../../components/scratch/scratch.js\"\n\n\nJS中实例调用：\n\n\n  new Scratch(this,{\n    canvasWidth: 197,   //画布宽带\n    canvasHeight: 72,  //画布高度\n    imageResource: \"./images/placeholder.png\", //遮罩层图片\n    r: 4, //笔触半径\n    awardTxt: '中大奖', //底部抽奖文字奖项\n    awardTxtColor: \"#1AAD16\", //底部抽奖文字颜色\n    awardTxtFontSize: \"24px\", //底部抽奖文字大小\n    maskColor: \"red\",  //没有图片遮罩层颜色\n    callback: () => {\n      //清除画布回调\n    }\n  })\n\n\n注意：小程序无 globalCompositeOperation = \"destination-out\" 属性，所以采用 clearRect 做擦除处理\n\n➂ 使用老虎机组件\n\n\nWXSS中引用样式：@import \"../../components/slotMachine/slotMachine.wxss\"\n\n\nWXML中引用结构：<import src=\"../../components/slotMachine/slotMachine.wxml\"/>\n\n\nJS中引用：import SlotMachine from \"../../components/slotMachine/slotMachine.js\"\n\n\nJS中实例调用：\n\n\n  new SlotMachine(this,{\n     height: 40,  //单个数字高度\n     len: 10,     //单个项目数字个数\n     transY1: 0,  //第一列初始位置\n     num1: 3,     //第一列结束数字\n     transY2: 0,  //第二列初始位置\n     num2: 0,     //第二列结束数字\n     transY3: 0,  //第三列初始位置\n     num3: 0,     //第三列结束数字\n     transY4: 0,  //第四列结束数字\n     num4: 1,     //第四列结束数字\n     speed: 24,   //速度\n     callback: (idx, award) => {\n      //结束回调， 参数对应宫格索引，对应奖项    \n    }\n  })\n\n➃ 使用水果机组件\n\n\nWXSS中引用样式：@import \"../../components/fruitMachine/fruitMachine.wxss\"\n\n\nWXML中引用结构：<import src=\"../../components/fruitMachine/fruitMachine.wxml\"/>\n\n\nJS中引用：import FruitMachine from \"../../components/fruitMachine/fruitMachine.js\"\n\n\nJS中实例调用：\n\n\n  new FruitMachine(this,{\n    len: 9, //宫格个数\n    ret: 9, //抽奖结果对应值1～9   \n    speed: 100,  // 速度值\n    callback: (idx, award) => {\n      //结束回调， 参数对应宫格索引，对应奖项    \n    }\n  })\n\n➄ 使用九宫格翻纸牌组件\n\n\nWXSS中引用样式：@import \"../../components/card/card.wxss\"\n\n\nWXML中引用结构：<import src=\"../../components/card/card.wxml\"/>\n\n\nJS中引用：import Card from \"../../components/card/card.js\"\n\n\nJS中实例调用：\n\n\n  new Card(this,{\n    data: [   //宫格信息，内联样式、是否是反面、是否运动、对应奖项\n      {isBack: false, isMove: false, award: \"一等奖\"},    \n      {isBack: false, isMove: false, award: \"二等奖\"},\n      {isBack: false, isMove: false, award: \"三等奖\"},\n      {isBack: false, isMove: false, award: \"四等奖\"},\n      {isBack: false, isMove: false, award: \"五等奖\"},\n      {isBack: false, isMove: false, award: \"六等奖\"},\n      {isBack: false, isMove: false, award: \"七等奖\"},\n      {isBack: false, isMove: false, award: \"八等奖\"},\n      {isBack: false, isMove: false, award: \"九等奖\"}\n    ],\n    callback: (idx, award) => {\n      //结束回调， 参数对应宫格索引，对应奖项    \n    }\n  })\n\n➅ 使用摇一摇组件\n\n\nWXSS中引用样式：@import \"../../components/shake/shake.wxss\"\n\n\nWXML中引用结构：<import src=\"../../components/shake/shake.wxml\"/>\n\n\nJS中引用：import Shake from \"../../components/shake/shake.js\"\n\n\nJS中实例调用：\n\n\n  new Shake(this,{\n    shakeThreshold: 70, //阈值\n    callback: (idx, award) => {\n      //结束回调， 参数对应宫格索引，对应奖项    \n    }\n  })\n\n➆ 使用手势解锁组件\n\n\nWXSS中引用样式：@import \"../../components/lock/lock.wxss\"\n\n\nWXML中引用结构：<import src=\"../../components/lock/lock.wxml\"/>\n\n\nJS中引用：import Lock from \"../../components/lock/lock.js\"\n\n\nJS中实例调用：\n\n\n  new Lock(this,{\n    canvasWidth: 300,   //canvas画布宽度 px\n    canvasHeight: 300,  //canvas画布高度 px \n    canvasId: \"canvasLock\", //canvas画布id\n    drawColor: \"#3985ff\"  //绘制颜色\n  })\n\n效果图展示\n\n\n\n\n\n\n\n\n更新记录\n\n[x] 优化文件目录结构                 2017-09-18\n[x] 手势解锁组件                    2017-09-17\n[x] 摇一摇组件                     2017-09-16\n[x] 九宫格翻纸组件                  2017-09-16\n[x] 增加老虎机组件、水果机组件         2017-09-02\n[x] 增加刮刮乐组件                  2017-08-29\n[x] 增加大转盘组件                  2017-08-27\n[x] create wx-market repository  2017-08-26\n\n开源协议\n本项目基于 MIT 协议，请自由地享受和参与开源。\n贡献\n如果你有好的意见或建议，欢迎给我们提 Issue 或 PR，为优化 wxapp-market 贡献力量。", "author": "平凡", "title": "O2小程序营销组件", "GitHub_Star": "1516"}
{"pub_time": "03-09", "article_content": "试了几个，有的不支持Py3，有的对Py3的加密支持有问题，这个wechatpy接口设计清晰明了，功能可用。推荐一下。  ___       __   _______   ________  ___  ___  ________  _________  ________  ___    ___ \n |\\  \\     |\\  \\|\\  ___ \\ |\\   ____\\|\\  \\|\\  \\|\\   __  \\|\\___   ___\\\\   __  \\|\\  \\  /  /|\n \\ \\  \\    \\ \\  \\ \\   __/|\\ \\  \\___|\\ \\  \\\\\\  \\ \\  \\|\\  \\|___ \\  \\_\\ \\  \\|\\  \\ \\  \\/  / /\n  \\ \\  \\  __\\ \\  \\ \\  \\_|/_\\ \\  \\    \\ \\   __  \\ \\   __  \\   \\ \\  \\ \\ \\   ____\\ \\    / / \n   \\ \\  \\|\\__\\_\\  \\ \\  \\_|\\ \\ \\  \\____\\ \\  \\ \\  \\ \\  \\ \\  \\   \\ \\  \\ \\ \\  \\___|\\/  /  /  \n    \\ \\____________\\ \\_______\\ \\_______\\ \\__\\ \\__\\ \\__\\ \\__\\   \\ \\__\\ \\ \\__\\ __/  / /    \n     \\|____________|\\|_______|\\|_______|\\|__|\\|__|\\|__|\\|__|    \\|__|  \\|__||\\___/ /     \n                                                                            \\|___|/      \n\n\n\n\n\n\n\n微信(WeChat) 公众平台第三方 Python SDK。\n【阅读文档】 【快速入门】\n\n功能特性\n\n普通公众平台被动响应和主动调用 API\n企业号公众平台被动响应和主动调用 API\n微信支付 API\n\n安装\n从 0.8.0 版本开始，wechatpy 消息加解密同时兼容 cryptography 和 PyCrypto,\n优先使用 cryptography 库。因而不再强制依赖 PyCrypto 库。可先自行安装 cryptography 或者 PyCrypto 库：\n# 安装 cryptography\npip install cryptography>=0.8.2\n# 或者安装 PyCrypto\npip install pycrypto>=2.6.1\n\n\nTips: Windows 用户请先安装 PyCrypto 的二进制包后再使用 pip 安装 wechatpy 。 PyCrypto Windows 的二进制包可以在这里下载。\n\n推荐使用 pip 进行安装:\npip install wechatpy\n# with cryptography\npip install wechatpy[cryptography]\n# with pycrypto\npip install wechatpy[pycrypto]\n\n升级版本：\npip install -U wechatpy\n\n使用示例\n使用示例参见 examples\n贡献代码\n请阅读 贡献代码指南\n问题反馈\n我们主要使用 GitHub issues 进行问题追踪和反馈。\nQQ 群：176596300\n\nLicense\nThis work is released under the MIT license. A copy of the license is provided in the LICENSE file.", "author": "小石", "title": "完美支持Py3的Python微信库", "GitHub_Star": "1737"}
{"pub_time": "02-27", "article_content": "我们接到了很多微信小程序开发者的反馈，表示他们强烈需要像 ECharts 这样的可视化工具。但是微信小程序是不支持 DOM 操作的，Canvas 接口也和浏览器不尽相同。因此，ECharts 团队和微信小程序官方团队合作，提供了 ECharts 的微信小程序版本。开发者可以通过熟悉的 ECharts 配置方式，快速开发图表，满足各种可视化需求。欢迎试用！如有问题，请通过 issue 反馈给我们。在微信小程序中使用 ECharts\n本项目是 ECharts 的微信小程序版本，以及使用的示例。\n开发者可以通过熟悉的 ECharts 配置方式，快速开发图表，满足各种可视化需求。\n体验示例小程序\n在微信中扫描下面的二维码即可体验 ECharts Demo：\n\n下载\n为了兼容小程序 Canvas，我们提供了一个小程序的组件，用这种方式可以方便地使用 ECharts。\n首先，下载本项目。\n其中，ec-canvas 是我们提供的组件，其他文件是如何使用该组件的示例。\nec-canvas 目录下有一个 echarts.js，默认我们会在每次 echarts-for-weixin 项目发版的时候替换成最新版的 ECharts。如有必要，可以自行从 ECharts 项目中下载最新发布版，或者从官网自定义构建以减小文件大小。\n引入组件\n微信小程序的项目创建可以参见微信公众平台官方文档。\n在创建项目之后，可以将下载的 ecomfe/echarts-for-weixin 项目完全替换新建的项目，然后将修改代码；或者仅拷贝 ec-canvas 目录到新建的项目下，然后做相应的调整。\n如果采用完全替换的方式，需要将 project.config.json 中的 appid 替换成在公众平台申请的项目 id。pages 目录下的每个文件夹是一个页面，可以根据情况删除不需要的页面，并且在 app.json 中删除对应页面。\n如果仅拷贝 ec-canvas 目录，则可以参考 pages/bar 目录下的几个文件的写法。下面，我们具体地说明。\n创建图表\n首先，在 pages/bar 目录下新建以下几个文件：index.js、 index.json、 index.wxml、 index.wxss。并且在 app.json 的 pages 中增加 'pages/bar/index'。\nindex.json 配置如下：\n{\n  \"usingComponents\": {\n    \"ec-canvas\": \"../../ec-canvas/ec-canvas\"\n  }\n}\n\n这一配置的作用是，允许我们在 pages/bar/index.wxml 中使用 <ec-canvas> 组件。注意路径的相对位置要写对，如果目录结构和本例相同，就应该像上面这样配置。\nindex.wxml 中，我们创建了一个 <ec-canvas> 组件，内容如下：\n<view class=\"container\">\n  <ec-canvas id=\"mychart-dom-bar\" canvas-id=\"mychart-bar\" ec=\"{{ ec }}\"></ec-canvas>\n</view>\n\n其中 ec 是一个我们在 index.js 中定义的对象，它使得图表能够在页面加载后被初始化并设置。index.js 的结构如下：\nfunction initChart(canvas, width, height) {\n  const chart = echarts.init(canvas, null, {\n    width: width,\n    height: height\n  });\n  canvas.setChart(chart);\n\n  var option = {\n    ...\n  };\n  chart.setOption(option);\n  return chart;\n}\n\nPage({\n  data: {\n    ec: {\n      onInit: initChart\n    }\n  }\n});\n\n这对于所有 ECharts 图表都是通用的，用户只需要修改上面 option 的内容，即可改变图表。option 的使用方法参见 ECharts 配置项文档。对于不熟悉 ECharts 的用户，可以参见 5 分钟上手 ECharts 教程。\n完整的例子请参见 ecomfe/echarts-for-weixin 项目。\n暂不支持的功能\nECharts 中的绝大部分功能都支持小程序版本，因此这里仅说明不支持的功能，以及存在的问题。\n以下功能尚不支持，如果有相关需求请在 issue 中向我们反馈，对于反馈人数多的需求将优先支持：\n\nTooltip\n图片\n多个 zlevel 分层\n\n此外，目前还有一些 bug 尚未修复，部分需要小程序团队配合上线支持，但不影响基本的使用。已知的 bug 包括：\n\n安卓平台：transform 的问题（会影响关系图边两端的标记位置、旭日图文字位置等）\niOS 平台：半透明略有变深的问题\niOS 平台：渐变色出现在定义区域之外的地方\n\n如有其它问题，也欢迎在 issue 中向我们反馈，谢谢！", "author": "羡辙", "title": "微信小程序中可以使用 ECharts 创建图表啦！", "GitHub_Star": "2173"}
{"pub_time": "2017-11-08", "article_content": "wux-weapp微信小程序自定义 UI 组件\n\n快速上手\n使用之前\n在开始使用之前，你需要先阅读 微信小程序自定义组件 的相关文档。\n如何使用\n首先到 GitHub 下载 Wux Weapp 的代码，然后 将dist/ 目录拷贝到自己的项目中。按照如下的方式使用组件，以 Badge 为例，其它组件在对应的文档页查看：\n在 page.json 中引入组件\n\"usingComponents\": {\n    \"wux-badge\": \"../../dist/badge/index\"\n}\n\n在 page.wxml 中使用组件\n<wux-badge count=\"22\" />\n<wux-badge count=\"44\" />\n<wux-badge count=\"66\" />\n\n预览\n您可以扫描下方的小程序码体验或用 微信web开发者工具 打开 example 目录（请注意，是 example 目录，不是整个项目）。\n\n<img src=\"./screenshots/screenshorts-01.png\" width=\"375px\" style=\"display:inline;\">\n文档\nDocument\n贡献\n有任何意见或建议都欢迎提 issue\nLicense\nMIT", "author": "skyvow", "title": "Wux - 微信小程序自定义 UI 组件", "GitHub_Star": "2573"}
{"pub_time": null, "article_content": "", "author": null, "title": null, "GitHub_Star": null}
{"pub_time": "2017-12-13", "article_content": "微信小程序图表工具，charts for WeChat small app，基于canvas绘制，体积小巧。wx-charts\n微信小程序图表工具，charts for WeChat small app\n基于canvas绘制，体积小巧\n持续优化更新中，请保持关注~ 有任何问题欢迎在Issues中讨论，提出issue前请先阅读此须知\n支持图表类型\n\n饼图   pie\n圆环图 ring\n线图   line\n柱状图 column\n区域图 area\n雷达图 radar\n\n代码分析 Here\n更新记录\n\n[ ] 动画性能优化\n[x] 图表滚动的支持，感谢@jxintang\n[x] 优化曲线绘制\n[x] 新增雷达图 2017-03-17\n[x] 新增tooltip 2017-03-07\n[x] 新增曲线的绘制 2017-03-06\n[x] 新增更新数据、终止进行中的动画方法，渲染完成事件回调 2017-02-17\n[x] 新增圆环图title, subtitle 2017-01-10\n[x] x轴文案碰撞避让 2016-12-30\n[x] add pie chart dataLabel  2016-12-19\n[x] add animation  2016-12-05\n[x] build with rollup 2016-12-02\n[x] add legend  2016-11-29\n\n如何使用\n1、直接引用编译好的文件 dist/wxcharts.js 或者 dist/wxcharts-min.js\n2、自行编译\ngit clone https://github.com/xiaolin3303/wx-charts.git\nnpm install rollup -g\nnpm install\nrollup -c 或者 rollup --config rollup.config.prod.js\n\n实际项目中如何具体使用wx-charts 或者 访问wx-charts-demo查看在微信开发工具中直接运行的例子\n参数说明\n参数说明 - wxCharts使用文档\n方法 & 事件\n方法 & 事件 - wxCharts使用说明\nExample\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n更多内容请查看Example - wxCharts使用说明\n测试\n\niPhone 6s, IOS 9.3.5\n小米4, ANDORID 6.0.1\n\n兼容性问题请在Issue中提出\n一些问题的说明汇总\n\nwx-charts自适应屏幕宽度的问题\n项目中如何具体使用wxCharts", "author": "闵仙森ༀ", "title": "微信小程序图表工具wx-charts", "GitHub_Star": "2863"}
{"pub_time": "2017-11-03", "article_content": "基于规范的小程序 UI 组件库，轻量、易用、工具化。Min 是一套面向小程序的开发环境，由蘑菇街前端开发团队提供和维护。目前，我们开源了它面向小程序自定义组件的部分（后续还会陆续开源其他能力），结合微信开发者工具，对组件的 开发 和 使用，Min 会让你感到优雅和高效。而 MinUI，就是基于 Min 平台产出的一套 UI 组件库，同时也是 “蘑菇街女装精选” 小程序 （小程序总榜前 3 位） 在应用的 UI 组件库。授人以渔，基于 Min 提供的开发赋能，和 MinUI 组件库实践的参考，不同小程序的开发者，可以快速建立起符合其自身需求的组件化体系。项目开源地址：https://github.com/meili/minuiMinUI\n基于规范的小程序 UI 组件库，轻量、易用、工具化。\n   \n\n\n○ 缘起\n一切的初衷，都始于我们希望像下面这样，在小程序中优雅的定义和使用组件。\n<img width=\"404\" src=\"https://s10.mogucdn.com/mlcdn/c45406/171101_5jji6el984agkfl47454i2h34ej88_808x425.png\" style=\"display:block;margin:0 auto;\" />\n于是我们设计了 Min。\nMin 是一套面向小程序的开发环境，提供 Min Cli。目前，我们开源了它面向小程序自定义组件的部分（后续还会陆续开源其他能力），结合微信开发者工具，对组件的 开发 和 使用，Min 会让你感到优雅和高效。\n而 MinUI，就是基于 Min 平台产出的一套 UI 组件库，同时也是蘑菇街小程序在应用的 UI 组件库。\n○ 体验\n在线体验\n通过下面的小程序二维码，可以在手机中体验 MinUI（微信基础库版本 1.6.3 以上支持）：\n\n本地体验\n\n安装 Min 的环境 $ npm install -g @mindev/min-cli\nClone MinUI 仓库到本地；\n安装依赖 $ npm install\n在 MinUI 根目录下执行 $ min dev，生成 dist/ 目录；\n微信开发者工具 —— 新建一个小程序，目录指向生成的 dist/；\nDone~\n\nPS：如想尝试修改源码，终端里先执行 $ min dev。这样任何的修改，都会在微信开发者工具中自动刷新显示。\n开发&应用\n如要基于 MinUI 进行二次开发，完善属于您项目的组件化体系，请移步至 Min 的使用文档 —— “组件开发” 环节。\n如要在既有小程序项目中，使用 Min 提供的组件安装和更新能力，请移步至 Min 的使用文档 —— “组件应用” 环节。\n○ 组件列表\n- 布局元素\n    - flex\n    - card（coming...）\n    - list（coming...）\n- 基础元件\n    - badge\n    - elip\n    - icon\n    - label\n    - loadmore\n    - price\n    - progress\n- 功能组件\n    - abnor\n    - countdown\n    - couner\n    - loading\n    - mask\n    - steps\n    - tab\n- 提示反馈\n    - dialog\n    - popup\n    - toast\n- 表单增强（coming...）\n\n○ 项目结构\n- MinUI/\n    - dist // 打包目录，在微信开发者工具中添加这个目录来运行项目\n    - packages // 组件目录\n        - loading\n            - src\n                - index.wxc // 组件单文件\n            - .npmignore\n            - package.json\n            - README.md\n            - LICENSE\n        - ...\n    - src // 页面源码\n        - common\n        - pages // 组件 demo 页面\n            - loading\n                - demos // demo 汇总，在 index.wxp 中引入和显示\n                - config.json\n                - index.wxp\n            - ...\n    - .editorconfig\n    - .gitignore\n    - LICENSE\n    - min.config.json\n    - package.json\n    - README.md\n\n更多项目结构介绍，可参考工具化 Min Cli 提供的工程说明。\n○ 开源协议\n本项目基于 MIT License，请自由的享受、参与开源。\n○ 更新记录\nv1.0.0（2017.10.24）\n\n初始版本", "author": "堂主&明淳", "title": "MinUI - 基于自定义组件的小程序 UI 组件库", "GitHub_Star": "2869"}
{"pub_time": "2017-11-03", "article_content": "Min 是一套面向小程序组件化的解决方案。通过 Min，小程序开发者可以优雅高效的进行自定义组件的开发和使用，为开发者赋能。Min 目前提供 Min Dev（开发环境） 和 MinUI（UI 组件库） 。Min Dev 一期提供了 CLI 服务（后续提供 GUI 服务，进一步降低普及成本），包括开发范式、一键式搭建开发环境、Demo 预览小程序、内置化文档、自动编译打包、组件一键发布、安装、更新等能力。项目开源地址：https://github.com/meili/min-cliMin Cli\n\n令小程序组件的开发和使用变得愉悦\n\n○ 最佳实践\nMinUI，是基于 Min 平台产出的一套 UI 组件库，同时也是蘑菇街小程序在应用的 UI 组件库。通过下面的小程序二维码，可以在手机中体验 MinUI（微信基础库版本 1.6.3 以上支持）：\n\n○ 环境安装\n$ npm install -g @mindev/min-cli\n\n○ 组件开发\n☞ 初始化组件开发环境\n$ cd ~/your-custom-project\n$ min init\n\n# 创建完毕后，执行下 $ min dev，生成 dist/ 目录。\n# 在 \"微信开发者工具\" 中新建一个小程序项目，项目目录指向 dist/。如此，组件就能在开发者工具中进行预览了。\n\n☞ 新建组件\n$ min new *name\n\n☞ 调试组件\n通过设置一个组件名 *name，来开启组件的调试。任何组件的改动，都会触发实时编译，并在 \"微信开发者\" 工具中显示改动后的效果。\n$ min dev *name\n\n# 支持英文逗号分隔，来同时调试多个组件\n$ min dev *name1 *name2\n\n# 无组件名，则监听整个工程环境的改动\n$ min dev\n\n☞ 发布组件\n发布后的组件即为一个随时可用的 npm 包：\n# 例如发布 loading 组件\n$ cd ~/your-weapp-project/packages/wxc-loading\n$ npm publish\n\n# 发布 scope 的 npm 包到外网，需带上 `--access=public`\n$ npm publish --access=public\n\n\n其实也可以采用 $ min publish 方法发布组件，支持单个发布和批量发布，支持自动升级版本号、远程仓库更新推送、自动打 tag 等。只不过某些情况下还有点小坑，最近几天会解决。如果您看到本文档时这段话还存在，可以先选择上面的 npm publish 方式发布 :p\n\n○ 组件应用\n☞ 安装组件\n在小程序项目中安装一个组件，这里用 MinUI 的 loading 和 toast 组件举例：\n$ cd ~/your-weapp-project\n$ min install @minui/wxc-loading\n\n批量安装：\n$ min install @minui/wxc-loading @minui/wxc-tast\n\n注：通过 min install 安装组件NPM包后同 npm install 一样放入到 node_modules 目录下，此时cli会将其进行编译并保存到小程序开发的目录下，默认在 dist/packages 目录下，用户可以进行自定义设置，使用姿势参考如下：\n在 ~/you-weapp-project 目录下，有个 min.config.json 配置文件，如果不存在将其创建\n{\n  \"npm\": {\n    \"dest\": \"custom-path\"\n  }\n}\n\n☞ 使用组件\n按照微信小程序组件化文档所示，引入组件并使用即可。\n使用已注册的自定义组件前，首先要在页面的 json 文件中进行引用声明。此时需要提供每个自定义组件的标签名和对应的自定义组件文件路径：\n{\n  \"usingComponents\": {\n    \"component-tag-name\": \"path/to/the/custom/component\"\n  }\n}\n\n注：在不同场景下用户提供的自定义组件文件路径存在区别。场景1)在已有的小程序应用里使用自定义组件，用户提供的文件路径必须是相对于当前文件，并指向到 min install 组件编译后的保存路径，上面的演示代码所示；场景2)通过 min init 创建小程序应用，用户提供的文件路径可以是场景1的使用姿势，也可以是一个组件NPM包名称，在 min dev 构建过程中会将其更改为NPM包编译后的保存路径，这里用 MinUI 的 loading 组件举例\n{\n  \"usingComponents\": {\n    \"wxc-loading\": \"@minui/wxc-loading\"\n  }\n}\n\n这样，在页面的 wxml 中就可以像使用内置组件一样使用自定义组件。节点名即自定义组件的标签名，节点属性即传递给组件的属性值。\n代码示例：\n<view>\n  <!-- 以下是对一个自定义组件的引用 -->\n  <component-tag-name inner-text=\"Some text\"></component-tag-name>\n</view>\n\n自定义组件的 wxml 节点结构在与数据结合之后，将被插入到引用位置内。\n☞ 更新组件\n# 全部更新\n$ min update\n\n# 选择性更新\n$ min update @minui/wxc-loading @minui/wxc-tast\n\n○ 工程说明（可选阅读）\n☞ 关于单文件\nMin 采用单文件的方式来开发组件，后缀为 .wxc，即 weixin component 的简写。\n采用单文件的方式开发一个组件，是因为通过 Min 提供的插件化能力，在编译环节可以做一些渐进增强的事情。\n同理，Min 还提供了 .wxp 和 .wxa，来为 page 和 app 的开发提供一些额外的赋能。如果您已经在本地尝试基于 Min 的开发，就会发现本地的组件开发环境这个小程序，就是基于 .wxp 和 .wxa 实现的。\n☞ 关于结构\n组件工程结构\n- /\n    - dist // 打包目录，在微信开发者工具中添加这个目录来运行项目\n    - src\n        - packages // 组件源码\n            - loading // loading 组件源码\n                - src\n                    - index.wxc // 组件单文件\n                - .npmignore\n                - package.json\n                - README.md\n                - LICENSE\n            - ...\n        - pages // 组件 Demo 示例\n            - loading // loading 组件示例\n                - demos\n                    - demo-default.wxc // 一个 demo 示例，在 index.wxp 中引入\n                    - ...\n                - docs // 组件文档\n                - index.wxp // demo 页\n            - ...\n\n*.wxc 组件结构\n<template>\n  <view class=\"loading\">\n    <view>Loading Component</view>\n  </view>\n</template>\n\n<script>\n  export default {\n    config: { ... },\n    properties: {\n      isShow: {\n        type: Boolean,\n        value: false\n      }\n    },\n    data: { }\n  }\n</script>\n\n<style>\n  .loading { }\n</style>\n\n*.wxp 页面结构\n<template>\n  <view class=\"loading\">\n    <wxc-loading is-show=\"{{true}}\"></wxc-loading>\n  </view>\n</template>\n\n<script>\n  export default {\n    config: {\n      navigationBarTitleText: 'Loading',\n      usingComponents: {\n        'wxc-loading': '@minui/wxc-loading'\n      }\n    },\n    data: {}\n  }\n</script>\n\n<style>\n  .loading { }\n</style>\n\n*.wxa 文件结构\n<!-- *.wxa 单文件里的 template 模块定义为全局公共模板概念，编译后会应用到所有的 .wxp 页面 -->\n<template>\n  <view>\n    <wxc-head></wxc-head>\n\n    <!-- wxp template -->\n    <page></page>\n\n    <wxc-foot></wxc-foot>\n  </view>\n</template>\n\n<script>\n  export default {\n    config: {\n      usingComponents: {\n        'wxc-head': 'components/head',\n        'wxc-foot': 'components/foot'\n      },\n      pages: [],\n      window: { ... },\n      ...\n    },\n    globalData: { },\n    onLaunch: function () { },\n    onShow: function () { },\n    onHide: function () { }\n  }\n</script>\n\n<style>\n</style>\n\n☞ 关于编译\n编译策略\n\n从 src 源码目录下的文件编译到 dist 目录；\n非单文件的文件在编译期间会自动从 src 关联到 dist 目录下；\n单文件 .wxc 和 .wxp 格式，编译成小程序原生的 .wxml、.wxss、.js、.json 多文件\n\n<template>\n<!-- template模块编译后，提取到 *.wxml 文件里 -->\n</template>\n\n<script>\n// script模块编译后，将逻辑部分的代码提取到 *.js，将配置部分的代码 *.json 文件里\n</script>\n\n<style>\n/* style模块编译后，提取到 *.wxss 文件里 */\n</style>\n\n脚本的编译\nscript 模块导出一个简单的对象，不同扩展的单文件在编译阶段会将在 export default 导出对象的外部嵌套 Component or Page or App 构造器\n单文件模块源码结构\n<script>\n    export default {...}\n</script>\n\n*.wxc 文件的script模块编译后生成 *.js 文件结构\nexport default Component({...})\n\n*.wxp 文件的script模块编译后生成 *.js 文件结构\nexport default Page({...})\n\n*.wxa 文件的script模块编译后生成 *.js 文件结构\nexport default App({...})\n\n样式的编译\n\n支持 px单位 转换，1px 自动转成 1rpx\n支持 rem单位 转换，1rem 自动转成 100rpx\n支持 bem 命名方法书写，分别@b、@e、@m定义，前提在style标签上增加lang=\"pcss\" 就能使用此能力了。\n支持 @import 文件动态编译，非 *.wxss 后缀的文件经过预编译插件生成.wxss文件\n支持 less 和 postcss 预编译插件\n\n// 源码\n<style>\n@import './a.wxss';\n@import './b.pcss';\n@import './c.less';\n\n.search {\n    border: 1px solid #ddd;\n    width: 1rem;\n}\n@b search {\n    padding: 0;\n\n    @e submit{\n        padding: 1rem;\n\n        @m button{\n            border: 1px solid #ccc;\n        }\n    }\n}\n</style>\n\n// 编译后\n<style>\n@import './a.wxss';\n@import './b.wxss';\n@import './c.wxss';\n\n.search {\n    border: 1rpx solid #ddd;\n    width: 100rpx;\n}\nsearch {\n    padding: 0;\n}\n.search__submit {\n    padding: 100rpx;\n}\n.search__submit--button {\n    border: 1rpx solid #ccc;\n}\n</style>\n\n配置的编译\n小程序原生的 *.json 配置项，放在单文件 <script></script> 模块中的 config 字段里：\n<!--.wxc 组件文件的 script 模块 -->\n<script>\n  export default {\n    // 组件的配置\n    config: {\n      component: true,\n      usingComponents: {}\n    }\n  }\n</script>\n\n<!--.wxp 页面文件的 script 模块 -->\n<script>\nexport default {\n  // 页面的配置\n  config: {\n    navigationBarTitleText: 'Title',\n    usingComponents: {\n      'example': '@minui/wxc-example',\n      'example-demo': '@minui/wxc-example-demo',\n      'wxc-loading': '@minui/wxc-loading'\n    }\n  }\n}\n</script>\n\n<!--.wxa 应用文件的 script 模块-->\n<script>\n  export default {\n    // 应用的配置\n    config: {\n      pages: [],\n      window: {\n        backgroundTextStyle: 'dark',\n        backgroundColor: '#efefef',\n        navigationBarBackgroundColor: '#ffffff',\n        navigationBarTitleText: 'MinUI',\n        navigationBarTextStyle: 'black'\n      },\n      networkTimeout: {\n        request: 10000\n      }\n    }\n  }\n</script>\n\n☞ 关于编辑器的支持\nVS Code 代码高亮\n\n在 Code 里先安装 Vue 的语法高亮插件 Vetur\n打开任意 .wxc 或 .wxp 文件\n点击右下角的选择语言模式，默认为纯文本\n在弹出的窗口中选择 .wxc 或 .wxp 的配置文件关联...\n在选择要与 .wxc 或 .wxp 关联的语言模式 中选择 Vue\n\nSublime 代码高亮\n\n文件后缀为 .wxc 或 .wxp，可共用vue高亮，但需要手动安装。\n打开 Sublime > Preferences > Browse Packages.. 进入用户包文件夹。\n在此文件夹下打开 cmd，运行 git clone git@github.com:vuejs/vue-syntax-highlight.git，无 git 用户可以直接下载 zip包，解压至当前文件夹。\n关闭 .wxc 或 .wxp 文件重新打开即可高亮。\n\nWebStorm 代码高亮\n\n打开 Preferences，搜索 Plugins，搜索 Vue.js 插件并安装。\n打开 Preferences，搜索 File Types，找到 Vue.js Template，在 Registered Patterns 添加 *.wxc 或 *.wxp，即可高亮。\n\nAtom 代码高亮\n\n在 Atom 里先安装 vue 的语法高亮 - language-vue，如装过就忽略此步。\n打开 Atom > Config 菜单。在 core 键下添加：\n\ncustomFileTypes:\n  \"text.html.vue\": [\n    \"wxc\",\n    \"wxp\"\n  ]\n\nVIM 代码高亮\n\n安装 vue 的 VIM 高亮插件，如 posva/vim-vue。\n配置 .wxc 或 .wxp 后缀名的文件使用 vue 语法高亮\n\n au BufRead,BufNewFile *.wxc setlocal filetype=vue.html.javascript.css\n au BufRead,BufNewFile *.wxp setlocal filetype=vue.html.javascript.css\n\n○ 开源协议\n本项目基于 MIT License，请自由的享受、参与开源。\n○ 更新记录\nv0.0.1（2017.11.02）\n\n初始版本", "author": "堂主&明淳", "title": "Min CLI - 小程序自定义组件开发框架", "GitHub_Star": "653"}
{"pub_time": "02-02", "article_content": "仓库：https://github.com/tinajs/tina文档：https://tina.js.orgTina.js\n\n一款轻巧的渐进式微信小程序框架\n\n\n\n\n特性\n\n\n:honeybee: 轻盈小巧\n核心框架打包后仅  。\n\n\n:raising_hand: 极易上手\n保留 MINA (微信小程序官方框架) 的大部分 API 设计；无论你有无小程序开发经验，都可以轻松过渡上手。\n\n\n:chart_with_upwards_trend: 渐进增强\n我们已经为你准备好了 状态管理器 (比如 Redux)、Immutable.js、路由增强 等扩展，当然你也可以 自己编写一个新的插件。\n\n\nNPM 与单文件组件\n结合我们为你准备的 mina-webpack，还能够为你的小程序项目带来：\n\n:oden: Mina 单文件组件 / 页面\n:package: NPM（没错！除了一般的包，你还可以分享或下载独立的 Mina 组件）\n:crystal_ball: 以及 Webpack 附带的其他能力，如 Babel、PostCSS、代码压缩等功能。\n\n一个简单的例子\n/app.mina\n<script>\nimport Tina from '@tinajs/tina'\nimport router from '@tinajs/tina-router'\n\nTina.use(router)\n\nApp()\n</script>\n\n/pages/home.mina\n<config>\n{\n  \"usingComponent\": {\n    \"logo\": \"../components/logo.mina\"\n  }\n}\n</config>\n\n<template>\n  <view>\n    <text>I'm {{ name }}. </text>\n    <button bindtap=\"sayHi\">Say Hi</button>\n    <logo />\n  </view>\n</template>\n\n<script>\nimport { Page } from '@tinajs/tina'\nimport { fetchUser } from '../api'\n\nPage.define(({\n  data: {\n    firstname: 'Tina',\n    lastname: 'S',\n  },\n\n  // 由 tina 集成的计算属性能力\n  compute ({ firstname, lastname }) {\n    return {\n      name: `${firstname} ${lastname}`,\n    }\n  }\n\n  onLoad () {\n    // 由 tina-router 提供的路由能力扩展\n    let { id } = this.$route.query\n    fetchUser(id)\n      .then(({ firstname, lastname ) => this.setData({ firstname, lastname }))\n      .catch(() => this.$router.redirect(`/pages/login?from=${this.$route.fullPath}`))\n  },\n\n  methods: {\n    sayHi () {\n      wechat.showModal({\n        title: `Hi ${this.data.name}`,\n      })\n    },\n  },\n}))\n</script>\n\n<style>\nview {\n  padding: 30px 20px;\n}\nbutton {\n  margin: 20px 0;\n}\n</style>\n\n浏览更多示例\n浏览更多使用 Tina.js 的示例\n文档\n如果你已经熟悉传统的小程序开发，那么上手 tina 将会非常简单。\n接下来，请前往 tina.js.org 查阅更详尽的指南。\nShowcase\n\n\nHacker News 热点\n\n\n\nLicense\nApache-2.0 © yelo, 2017 - present", "author": "yelo🐯", "title": "Tina.js | 一款轻巧的渐进式微信小程序框架", "GitHub_Star": "709"}
{"pub_time": "07-10", "article_content": "生成海报相信大家有的人都做过，但是canvas绘图的坑太多。大家可以试试这个组件。Painter\n\n由于我们无法将小程序直接分享到朋友圈，但分享到朋友圈的需求又很多，业界目前的做法是利用小程序的 Canvas 功能生成一张带有二维码的图片，然后引导用户下载图片到本地后再分享到朋友圈。而小程序 Canvas 功能是很难用的，往往为了绘制一张简单图片，就得写上一堆 boilerplate code ，而且一不小心还会踩到 Canvas 的各种彩蛋（坑）。我想此时你的心情肯定是这样的。\n\n这边说上几个小程序 Canvas 的坑\n\nCanvas 绘图是用的 px，而在小程序中我们一般使用 rpx 进行相对布局。\n小程序 Canvas 中的 drawImage 方法，在 IDE 中可以直接设置网络图片进行绘制，但在真机上设置网络图片无用。\ncanvasContext.clip 方法在 iOS 设备上的微信 6.6.6 版本及以下有 bug，会导致该 clip 下面使用的的 restore 方法失效。\n\n画家计划\n想到小程序中有如此大量的生成图片需求，而 Canvas 生成方法又是如此难用和坑爹。那我们就想到可不可以做一款可以很方便生成图片，并且还能屏蔽掉直接使用 Canvas 的一些坑的库呢？所以我们发起了 “画家计划— 通过 json 数据形式，来进行动态渲染并绘制出图片”。 Painter 库的整体架构如下：\n\n首先，我们定义了一套绘图 JSON 规范，开发者可以根据需求构建生成图片的 Palette（调色板），然后在程序运行过程中把调色板传入给 Painter（画家）。Painter 会调用 Pen（画笔），根据 Palette 内容绘制出对应的图片后返回。\nHow To Use\n运行例子\ngit clone https://github.com/Kujiale-Mobile/Painter.git\n\n代码下载后，用小程序 IDE 打开后即可使用。\n注：请选择小程序项目，非小游戏，例子中无 appid，所以无法在手机上运行，如果需要真机调试，请在打开例子时，填上自己的小程序 id\n使用 Painter\n\n\n引入代码\nPainter 的核心代码在另一个 repo 中，https://github.com/Kujiale-Mobile/PainterCore.git 。你可以通过以下三种方式进行库的引入：\n一，直接下载代码，拷贝代码到你需要的库中。（不推荐）\n二，submodule 的方式。可以在主项目下执行以下命令。如后续需更新代码，则到对应目录下 pull 最新的代码即可。（推荐）\ngit submodule add https://github.com/Kujiale-Mobile/PainterCore.git components/painter\n\n三，subtree 的方式。也一样是在主项目中执行命令。代码更新要复杂点，submodule 和 subtree 的区别请自行 Google。\ngit subtree add --prefix=components/painter https://github.com/Kujiale-Mobile/PainterCore.git master\n\n\n\n作为自定义组件引入，注意目录为第一步引入的代码所在目录\n\"usingComponents\":{\n  \"painter\":\"/components/painter/painter\"\n}\n\n\n\n组件接收 palette 字段作为画图数据的数据源, 图案数据以json形式存在，推荐使用“皮肤模板”的方法进行传递，示例代码如下：\n<painter palette=\"{{data}}\" bind:imgOK=\"onImgOK\" />\n\n\n\n数据传入后，则会自动进行绘图。绘图完成后，你可以通过绑定 imgOK 或 onImgErr 事件来获得成功后的图片 或失败的原因。\nbind:imgOK=\"onImgOK\"\nbind:imgErr=\"onImgErr\"\n\n\n\nPalette 规范\n如你使用 wxss + wxml 规范进行绘制一样，Painter 需要根据一定的规范来进行图片绘制。当然 Painter 的绘制规范要比 wxml 简单很多。\n调色板属性\n一个调色板首先需要给予一些整体属性\nbackground: 可以是颜色值，也可以为网络图片的链接，默认为白色\nwidth: 宽度\nheight: 高度\nborderRadius: 边框的圆角（该属性也同样适用于子 view）\nviews: 里面承载子 view\n\n子 View 属性\n当我们把整体的调色板属性构建起来后，里面就可以添加子 View 来进行绘制了。\n\n\n\ntype\ncontent\ndescription\n自有css\n\n\n\n\nimage\nurl\n表示图片资源的地址，本地或网络\n\n\n\ntext\ntext\n文本的内容\nfontSize: 文字大小，color: 字体颜色（默认为黑色）\n\n\nrect\n无\n矩形\ncolor: 颜色\n\n\nqrcode\ncontent\n画二维码\nbackground:  背景颜色（默认为透明色），\n\n\n\n布局属性\n以上 View ，除去自己拥有的特别属性外，还有以下的通用布局属性\n\n\n\n属性\n意义\n\n\n\n\nrotate\n旋转，按照顺时针旋转的度数，默认不旋转\n\n\nborderRadius\n边界圆角程度，如果是正方形布局，该属性为一半宽或高时，则为圆形\n\n\ntop、right、bottom、left\n如 css 中为 absolute 布局时的作用，默认 top 和 left 为 0\n\n\nalign\ncenter：中间对齐方式；right：右对齐方式；left：左对齐方式（默认，可不写）\n\n\n\n尺寸即其他\n1，目前 Painter 中支持两种尺寸单位，px 和 rpx，代表的意思和小程序中一致，此处就不多说。\n2，目前子 view 的 css 属性支持 object 或 array。所以意味着，你可以把几个子 view 共用的 css 属性提取出来。做到让 Palette 更加简洁。\n3，因为我们的 palette 是以 js 承载的 json，所以意味着你可以在每一个属性中很方便的加上自己的逻辑。也可以把某些属性单独提取出来，让多个 palette 共用，做到模块化。\n举个栗子\n{\n  background: '#eee',\n  width: '654rpx',\n  height: '400rpx',\n  borderRadius: '20rpx',\n  views: [\n  {\n    type: 'image',\n    url: 'https://qhyxpicoss.kujiale.com/r/2017/12/04/L3D123I45VHNYULVSAEYCV3P3X6888_3200x2400.jpg@!70q',\n    css: {\n      top: '48rpx',\n      right: '48rpx',\n      width: '192rpx',\n      height: '192rpx',\n    },\n  }\n  ...\n  ],\n}\n\n绘制效果如下\n\n\nLicense\nCopyright (c) 2018 Kujiale\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.", "author": "闵仙森ༀ", "title": "Painter 一款轻量级的小程序海报生成组件", "GitHub_Star": "709"}
{"pub_time": "01-15", "article_content": "功能清单：1.缩略图的方式显示文章列表（首页，分类文章），包括显示文章分类和发布时间，加载分页。2.在首页用轮播方式显示置顶文章。3.显示文章分类（专题），包括显示分类的封面图片。4.显示文章内容页，包括文章站内链接跳转，站外链接复制到剪切板，显示猜你喜欢的相关文章。5.显示文章评论，提交评论和回复评论，加载评论分页，显示微信用户评论者的头像。6.显示文章排行7.显示wordpress“页面”类文字（关于页面）。8.对文章内容的全文搜索。9.文章页面的分享、转发，复制。10.WordPress 插件的配套功能。11.文章浏览数显示及更新。12.文章微信用户点赞及点赞的微信用户头像显示。13.通过微信支付对文章赞赏。14.赞赏后发送模版消息。15.web-view内嵌网页跳转。16.回复评论发送模板消息。17.专题订阅。WordPress版微信小程序\n\n\n功能清单：\n1.缩略图的方式显示文章列表（首页，分类文章），包括显示文章分类和发布时间，加载分页。\n2.在首页用轮播方式显示置顶文章。\n3.显示文章分类（专题），包括显示分类的封面图片。\n4.显示文章内容页，包括文章站内链接跳转，站外链接复制到剪切板，显示猜你喜欢的相关文章。\n5.显示文章评论，提交评论和回复评论，加载评论分页，显示微信用户评论者的头像。\n6.显示文章排行\n7.显示wordpress“页面”类文字（关于页面）。\n8.对文章内容的全文搜索。\n9.文章页面的分享、转发，复制。\n10.WordPress 插件的配套功能。\n11.文章浏览数显示及更新。\n12.文章微信用户点赞及点赞的微信用户头像显示。\n13.通过微信支付对文章赞赏。\n14.赞赏后发送模版消息。\n15.web-view内嵌网页跳转。\n16.回复评论发送模板消息。\n17.专题订阅。\n开源地址\nhttps://github.com/iamxjb/winxin-app-watch-life.net\n如果因为某些原因github无法访问，可以选择以下镜像地址：\n1.https://git.oschina.net/iamxjb/winxin-app-watch-life.net\n2.https://code.aliyun.com/iamxjb/winxin-app-watch-life.net\n3.https://coding.net/u/xjb/p/winxin-app-watch-life.net\n4.https://gitlab.com/xiajianbo/winxin-app-watch-life.net\n小程序访问微信二维码：\n\n技术支持网站：https://www.watch-life.net\n小程序配套wordpress插件：\n本小程序完整使用需要配合我编写的wordpress插件wp-rest-api-for-app，才能完整使用，插件下载地址： https://github.com/iamxjb/wp-rest-api-for-app\n小程序配套赞赏（微信支付）功能服务端程序：\n本小程序赞赏功能需要配合我编写微信支付服务端php程序，才能使用，程序下载地址： https://github.com/iamxjb/weixin-app-wxpay\n开源协议：MIT\n技术支持微信：iamxjb\n\n安装使用说明文档\n<a href=\"https://www.watch-life.net/wordpress/weixin-app-install.html\" target=\"_blank\" rel=\"noopener\">WordPress版微信小程序安装使用说明</a>\n程序开发系列文章\n<a href=\"https://www.watch-life.net/wordpress/weixin-connect-wordpress.html\" target=\"_blank\" rel=\"noopener\">1.用微信小程序连接WordPress网站</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-1-5.html\" target=\"_blank\" rel=\"noopener\">2.WordPress版微信小程序1.5版本发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2.html\" target=\"_blank\" rel=\"noopener\">3.WordPress版微信小程序2.0版本发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-rest-api-weixin-weapp.html\" target=\"_blank\" rel=\"noopener\">4.利用WordPress REST API 开发微信小程序从入门到放弃</a>\n<a href=\"https://www.watch-life.net/wechat/wordpress-weixin-2-1-5.html\" target=\"_blank\">5.WordPress版微信小程序2.1.5版发布</a></p>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-1-8.html\" target=\"_blank\" rel=\"noopener\">6.WordPress版微信小程序2.1.8版发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-rest-api.html\" rel=\"bookmark\">WordPress版微信小程序开发系列(一)：WordPress REST API</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-2-0.html\" target=\"_blank\">8.WordPress版微信小程序2.2.0版发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-2-8.html\" target=\"_blank\">9.WordPress版微信小程序2.2.8版本发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-app-faq.html\" target=\"_blank\">10.WordPress版微信小程序开发系列(二):安装使用问答</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-4.html\" target=\"_blank\">11.WordPress版微信小程序2.4版发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-6.html\" target=\"_blank\">12.WordPress版微信小程序2.6版发布</a>\n优秀WordPress版微信小程序推荐\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-app-for-you-1.html\" target=\"_blank\">优秀WordPress版微信小程序推荐(一)</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-app-for-you-2.html\" target=\"_blank\">优秀WordPress版微信小程序推荐(二)</a>\n讨论微信群：\n\n开源声明：\n1、本程序html转wxml的解析采用的是https://github.com/icindy/wxParse\n2.本程序有关es6-promise 部分代码参考 开源程序：https://github.com/cinoliu/-es6-promise\n在此对上述提供开源及创意表示致谢。\n捐赠赞赏：请微信扫描以下二维码。感谢您对我的支持，您的支持是我前进的动力\n\nWordPress微信小程序知识星球(小密圈)\n考虑到微信群里交流过于庞杂和碎片化，无法提供更专业的技术服务和知识分享，很多好的知识不能很好沉淀和积累，无法提供更好的分享价值，同时我也有意和兴趣相投人一起，创建一个wordpress和微信小程序的知识社区。基于此，我在“知识星球”里创建了一个“Wordpress微信小程序”的圈子，欢迎有兴趣的朋友和我一起创建一个有活力、创造力、有趣、有深度的知识社群。\n\n更新历史：\n2017年12月15日\n1.增加赞赏后发送模板消息。\n2.增加回复评论发送模板消息。\n3.调整评论和回复的显示方式及提交评论、回复发送方式。\n2017年11月1日\n1.调整“热点”板块为“排行”板块，显示按评论数、浏览数、点攒数、赞赏数的文章排行。\n2.增加“我的”板块，显示我浏览、评论、点赞、赞赏过的文章。\n3、加入内链的web-view嵌入网页跳转。\n4、在关于中显示“赞赏”或“捐赠”人的头像，并致谢。\n2017年9月16日\n1.增加点赞功能\n2.增加赞赏功能（微信支付）\n2017年8月17日\n1.增加站内链接。\n2.增加猜你喜欢功能。\n3.增加热点文章功能。\n4、取消浏览记录功能。\n2017年7月29日\n1.完善文章的评论，按评论时间对一级评论按时间先后显示，最新发表的显示在最上面。\n2.以嵌套的方式显示评论和回复，最多显示5层嵌套。\n3.增加评论的回复功能，可以针对4级评论（回复）进行回复。\n4.文章内容页加入一直没有引入的wxParse.wxss文件（弥补愚蠢的错误）。\n2017年7月15日\n1.完善首页列表的缩略。调整为150*150的小图，需要配合wp-rest-api-for-app插件.\n2.去除侧滑菜单。增加专题分类，并完善搜索。\n3.完善评论及显示。\n4.优化程序性能，整理wxss，让程序代码更易懂和美观.\n5.修复获取微信头像bug，当头像如果是https地址的话，不强制转换成https。\n6.修复没有置顶文章，下拉刷新不显示列表的bug。\n7.为评论增加分页，提供分页刷新的功能。\n日期：2017年6月6日\n内容：\n1.调整列表页的显示方式。\n2.增加搜索。\n3.首页增加轮播图片和缩略图。\n4.增加文章评论\n5.增加小程序分享\n升级的详细说明见： https://www.watch-life.net/wordpress/wordpress-weixin-2-html.html\n日期：2017年5月15日\n内容：\n1.在主页面，加入浮动按钮，用来打开侧滑导航菜单。\n2.增加侧滑导航菜单，菜单上包括页面及文章分类.侧滑菜单代码参考WechatSmallApps（https://github.com/jkgeekJack/WechatSmallApps）的代码修改。\n3.优化下拉刷新数据（分页）的性能。\n4.文章列表页添加发布时间。\n5.升级最新的微信小程序富文本解析组件wxParse（https://github.com/icindy/wxParse）\n升级的详细说明见：https://www.watch-life.net/wordpress/wordpress-weixin-1-5.html", "author": "贰先生", "title": "WordPress版微信小程序【自媒体、资讯、博客小程序】", "GitHub_Star": "834"}
{"pub_time": "2017-11-03", "article_content": "用于帮助使用WordPress的网站用户,通过简单的配置,快速搭建微信小程序.WordPress版微信小程序\n\n功能清单：\n1.缩略图的方式显示文章列表（首页，分类文章），包括显示文章分类和发布时间，加载分页。\n2.在首页用轮播方式显示置顶文章。\n3.显示文章分类（专题），包括显示分类的封面图片。\n4.显示文章内容页，包括文章站内链接跳转，站外链接复制到剪切板，显示猜你喜欢的相关文章。\n5.显示文章评论，提交评论和回复评论，加载评论分页，显示微信用户评论者的头像。\n6.显示热点文章。\n7.显示wordpress“页面”类文字（关于页面）。\n8.对文章内容的全文搜索。\n9.文章页面的分享、转发，复制。\n10.WordPress 插件的配套功能。\n11.文章浏览数显示及更新。\n12.文章微信用户点赞及点赞的微信用户头像显示。\n13.通过微信支付对文章赞赏。\n小程序访问微信二维码：\n\n技术支持网站：https://www.watch-life.net\n小程序配套wordpress插件：\n本小程序完整使用需要配合我编写的wordpress插件wp-rest-api-for-app，才能完整使用，插件下载地址： https://github.com/iamxjb/wp-rest-api-for-app\n小程序配套赞赏（微信支付）功能服务端程序：\n本小程序赞赏功能需要配合我编写微信支付服务端php程序，才能使用，程序下载地址： https://github.com/iamxjb/weixin-app-wxpay\n开源协议：MIT\n技术支持微信：iamxjb\n\n程序开发系列文章\n<a href=\"https://www.watch-life.net/wordpress/weixin-connect-wordpress.html\" target=\"_blank\" rel=\"noopener\">1.用微信小程序连接WordPress网站</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-1-5.html\" target=\"_blank\" rel=\"noopener\">2.WordPress版微信小程序1.5版本发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2.html\" target=\"_blank\" rel=\"noopener\">3.WordPress版微信小程序2.0版本发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-rest-api-weixin-weapp.html\" target=\"_blank\" rel=\"noopener\">4.利用WordPress REST API 开发微信小程序从入门到放弃</a>\n<a href=\"https://www.watch-life.net/wechat/wordpress-weixin-2-1-5.html\" target=\"_blank\">5.WordPress版微信小程序2.1.5版发布</a></p>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-1-8.html\" target=\"_blank\" rel=\"noopener\">6.WordPress版微信小程序2.1.8版发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-rest-api.html\" rel=\"bookmark\">WordPress版微信小程序开发系列(一)：WordPress REST API</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-2-0.html\" target=\"_blank\">8.WordPress版微信小程序2.2.0版发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-2-8.html\" target=\"_blank\">9.WordPress版微信小程序2.2.8版本发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-app-faq.html\" target=\"_blank\">10.WordPress版微信小程序开发系列(二):安装使用问答</a>\n优秀WordPress版微信小程序推荐\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-app-for-you-1.html\" target=\"_blank\">优秀WordPress版微信小程序推荐(一)</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-app-for-you-2.html\" target=\"_blank\">优秀WordPress版微信小程序推荐(二)</a>\n讨论微信群：\n由于微信群超过100人，无法再扫描二维码加入。如果你想加入，请先加我的微信：iamxjb ，我拉你入群。\n开源声明：\n1、本程序html转wxml的解析采用的是https://github.com/icindy/wxParse\n2、专题页面及浏览记录页面的设计思路参考 https://devework.com/  网站的小程序\n3.本程序有关es6-promise 部分代码参考 开源程序：https://github.com/cinoliu/-es6-promise\n在此对上述提供开源及创意表示致谢。\n捐赠赞赏：请微信扫描以下二维码。感谢您对我的支持，您的支持是我前进的动力\n\n更新历史：\n2017年9月16日\n1.增加点赞功能\n2.增加赞赏功能（微信支付）\n2017年8月17日\n1.增加站内链接。\n2.增加猜你喜欢功能。\n3.增加热点文章功能。\n4、取消浏览记录功能。\n2017年7月29日\n1.完善文章的评论，按评论时间对一级评论按时间先后显示，最新发表的显示在最上面。\n2.以嵌套的方式显示评论和回复，最多显示5层嵌套。\n3.增加评论的回复功能，可以针对4级评论（回复）进行回复。\n4.文章内容页加入一直没有引入的wxParse.wxss文件（弥补愚蠢的错误）。\n2017年7月15日\n1.完善首页列表的缩略。调整为150*150的小图，需要配合wp-rest-api-for-app插件.\n2.去除侧滑菜单。增加专题分类，并完善搜索。\n3.完善评论及显示。\n4.优化程序性能，整理wxss，让程序代码更易懂和美观.\n5.修复获取微信头像bug，当头像如果是https地址的话，不强制转换成https。\n6.修复没有置顶文章，下拉刷新不显示列表的bug。\n7.为评论增加分页，提供分页刷新的功能。\n日期：2017年6月6日\n内容：\n1.调整列表页的显示方式。\n2.增加搜索。\n3.首页增加轮播图片和缩略图。\n4.增加文章评论\n5.增加小程序分享\n升级的详细说明见： https://www.watch-life.net/wordpress/wordpress-weixin-2-html.html\n日期：2017年5月15日\n内容：\n1.在主页面，加入浮动按钮，用来打开侧滑导航菜单。\n2.增加侧滑导航菜单，菜单上包括页面及文章分类.侧滑菜单代码参考WechatSmallApps（https://github.com/jkgeekJack/WechatSmallApps）的代码修改。\n3.优化下拉刷新数据（分页）的性能。\n4.文章列表页添加发布时间。\n5.升级最新的微信小程序富文本解析组件wxParse（https://github.com/icindy/wxParse）\n升级的详细说明见：https://www.watch-life.net/wordpress/wordpress-weixin-1-5.html", "author": "Jianbo", "title": "WordPress版微信小程序", "GitHub_Star": "834"}
{"pub_time": "09-07", "article_content": "WordPress版微信小程序WordPress版微信小程序\n\n\n功能清单：\n1.缩略图的方式显示文章列表（首页，分类文章），包括显示文章分类和发布时间，加载分页。\n2.在首页用轮播方式显示置顶文章。\n3.显示文章分类（专题），包括显示分类的封面图片。\n4.显示文章内容页，包括文章站内链接跳转，站外链接复制到剪切板，显示猜你喜欢的相关文章。\n5.显示文章评论，提交评论和回复评论，加载评论分页，显示微信用户评论者的头像。\n6.显示文章排行\n7.显示wordpress“页面”类文字（关于页面）。\n8.对文章内容的全文搜索。\n9.文章页面的分享、转发，复制。\n10.WordPress 插件的配套功能。\n11.文章浏览数显示及更新。\n12.文章微信用户点赞及点赞的微信用户头像显示。\n13.通过微信支付对文章赞赏。\n14.赞赏后发送模版消息。\n15.web-view内嵌网页跳转。\n16.回复评论发送模板消息。\n17.专题订阅。\n18.文章海报（分享微信朋友圈的卡片）。\n开源地址\nhttps://github.com/iamxjb/winxin-app-watch-life.net\n如果因为某些原因github无法访问，可以选择以下镜像地址：\n1.https://git.oschina.net/iamxjb/winxin-app-watch-life.net\n2.https://code.aliyun.com/iamxjb/winxin-app-watch-life.net\n3.https://coding.net/u/xjb/p/winxin-app-watch-life.net\n4.https://gitlab.com/xiajianbo/winxin-app-watch-life.net\n小程序访问微信二维码：\n\n技术支持网站：https://www.watch-life.net\n小程序配套wordpress插件：\n本小程序完整使用需要配合我编写的wordpress插件wp-rest-api-for-app，才能完整使用，插件下载地址： https://github.com/iamxjb/wp-rest-api-for-app\n小程序配套赞赏（微信支付）功能服务端程序：\n本小程序赞赏功能需要配合我编写微信支付服务端php程序，才能使用，程序下载地址： https://github.com/iamxjb/weixin-app-wxpay\n开源协议：MIT\n技术支持微信：iamxjb\n\n安装使用说明文档\n<a href=\"https://www.watch-life.net/wordpress/weixin-app-install.html\" target=\"_blank\" rel=\"noopener\">WordPress版微信小程序安装使用说明</a>\n程序开发系列文章\n<a href=\"https://www.watch-life.net/wordpress/weixin-connect-wordpress.html\" target=\"_blank\" rel=\"noopener\">1.用微信小程序连接WordPress网站</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-1-5.html\" target=\"_blank\" rel=\"noopener\">2.WordPress版微信小程序1.5版本发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2.html\" target=\"_blank\" rel=\"noopener\">3.WordPress版微信小程序2.0版本发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-rest-api-weixin-weapp.html\" target=\"_blank\" rel=\"noopener\">4.利用WordPress REST API 开发微信小程序从入门到放弃</a>\n<a href=\"https://www.watch-life.net/wechat/wordpress-weixin-2-1-5.html\" target=\"_blank\">5.WordPress版微信小程序2.1.5版发布</a></p>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-1-8.html\" target=\"_blank\" rel=\"noopener\">6.WordPress版微信小程序2.1.8版发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-rest-api.html\" rel=\"bookmark\">WordPress版微信小程序开发系列(一)：WordPress REST API</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-2-0.html\" target=\"_blank\">8.WordPress版微信小程序2.2.0版发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-2-8.html\" target=\"_blank\">9.WordPress版微信小程序2.2.8版本发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-app-faq.html\" target=\"_blank\">10.WordPress版微信小程序开发系列(二):安装使用问答</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-4.html\" target=\"_blank\">11.WordPress版微信小程序2.4版发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-2-6.html\" target=\"_blank\">12.WordPress版微信小程序2.6版发布</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-3-0.html\" target=\"_blank\">13.WordPress版微信小程序3.0版发布</a>\n优秀WordPress版微信小程序推荐\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-app-for-you-1.html\" target=\"_blank\">优秀WordPress版微信小程序推荐(一)</a>\n<a href=\"https://www.watch-life.net/wordpress/wordpress-weixin-app-for-you-2.html\" target=\"_blank\">优秀WordPress版微信小程序推荐(二)</a>\n讨论微信群：\n由于微信群超过100人，无法再扫描二维码加入。如果你想加入，请先加我的微信：iamxjb ，我拉你入群。\n开源声明：\n1、本程序html转wxml的解析采用的是https://github.com/icindy/wxParse\n2.本程序有关es6-promise 部分代码参考 开源程序：https://github.com/cinoliu/-es6-promise\n在此对上述提供开源及创意表示致谢。\n捐赠赞赏：请微信扫描以下二维码。感谢您对我的支持，您的支持是我前进的动力\n\nWordPress微信小程序知识星球(小密圈)\n考虑到微信群里交流过于庞杂和碎片化，无法提供更专业的技术服务和知识分享，很多好的知识不能很好沉淀和积累，无法提供更好的分享价值，同时我也有意和兴趣相投人一起，创建一个wordpress和微信小程序的知识社区。基于此，我在“知识星球”里创建了一个“Wordpress微信小程序”的圈子，欢迎有兴趣的朋友和我一起创建一个有活力、创造力、有趣、有深度的知识社群。\n\n更新历史：\n2018年2月15日\n1.增加文章海报（分享微信朋友圈的卡片）功能。\n2.兼容个人主体小程序的功能完善\n3.文章分享加题图。\n4.首页导航，提供三种方式的跳转\n2017年12月15日\n1.增加赞赏后发送模板消息。\n2.增加回复评论发送模板消息。\n3.调整评论和回复的显示方式及提交评论、回复发送方式。\n2017年11月1日\n1.调整“热点”板块为“排行”板块，显示按评论数、浏览数、点攒数、赞赏数的文章排行。\n2.增加“我的”板块，显示我浏览、评论、点赞、赞赏过的文章。\n3、加入内链的web-view嵌入网页跳转。\n4、在关于中显示“赞赏”或“捐赠”人的头像，并致谢。\n2017年9月16日\n1.增加点赞功能\n2.增加赞赏功能（微信支付）\n2017年8月17日\n1.增加站内链接。\n2.增加猜你喜欢功能。\n3.增加热点文章功能。\n4、取消浏览记录功能。\n2017年7月29日\n1.完善文章的评论，按评论时间对一级评论按时间先后显示，最新发表的显示在最上面。\n2.以嵌套的方式显示评论和回复，最多显示5层嵌套。\n3.增加评论的回复功能，可以针对4级评论（回复）进行回复。\n4.文章内容页加入一直没有引入的wxParse.wxss文件（弥补愚蠢的错误）。\n2017年7月15日\n1.完善首页列表的缩略。调整为150*150的小图，需要配合wp-rest-api-for-app插件.\n2.去除侧滑菜单。增加专题分类，并完善搜索。\n3.完善评论及显示。\n4.优化程序性能，整理wxss，让程序代码更易懂和美观.\n5.修复获取微信头像bug，当头像如果是https地址的话，不强制转换成https。\n6.修复没有置顶文章，下拉刷新不显示列表的bug。\n7.为评论增加分页，提供分页刷新的功能。\n日期：2017年6月6日\n内容：\n1.调整列表页的显示方式。\n2.增加搜索。\n3.首页增加轮播图片和缩略图。\n4.增加文章评论\n5.增加小程序分享\n升级的详细说明见： https://www.watch-life.net/wordpress/wordpress-weixin-2-html.html\n日期：2017年5月15日\n内容：\n1.在主页面，加入浮动按钮，用来打开侧滑导航菜单。\n2.增加侧滑导航菜单，菜单上包括页面及文章分类.侧滑菜单代码参考WechatSmallApps（https://github.com/jkgeekJack/WechatSmallApps）的代码修改。\n3.优化下拉刷新数据（分页）的性能。\n4.文章列表页添加发布时间。\n5.升级最新的微信小程序富文本解析组件wxParse（https://github.com/icindy/wxParse）\n升级的详细说明见：https://www.watch-life.net/wordpress/wordpress-weixin-1-5.html", "author": "贰先生", "title": "WordPress版微信小程序", "GitHub_Star": "834"}
{"pub_time": "11-13", "article_content": "megalo 是基于 Vue 的小程序框架（没错，又是基于 Vue 的小程序框架），但是它不仅仅支持微信小程序，还支持 alipay 小程序，百度小程序，同时还支持在开发时使用更多 Vue 的特性。背景对于用户而言，小程序能提供更好的体验，但对于开发者而言，要让一个应用跑在多个平台上，则需要写多套代码。如何提高小程序开发效率让很多开发者都感到头疼。业界也有相关的解决方案，如 taro 和 mpvue，二者都是基于 react 和 vue 的开发模式实现，让开发者能够以他们熟知的 react 或 vue 模式来开发小程序，提高开发效率。mpvue 的发布给了我们很多启发，更早的时候，我们基于 RegularJS（网易自研的前端框架）开发了一个名为 mpregular 的小程序框架。在 mpregular 的开发和实际使用过程中，我们发现如果小程序框架所支持的特性只是原框架的子集（例如不支持 filter、模版复杂表达式等），开发效率会大打折扣。所以，我们在方案上做了很多尝试，目的是支持更多的特性，减少小程序与 H5 开发之前的差异。目前 mpregular 已经在考拉的小程序业务中大量应用，相关业务的开发同学纷纷表示，学习成本变低，跨端业务（H5 和小程序）的开发效率提升近一倍。方案经过一段时间验证后，我们决定把这套方案用 vue 再实现一次，一是为了适应技术栈的变更升级，二是为社区做一点微小的工作，于是就便有了 megalo。特性支持更多模版语法特性相比于其他小程序开发模式，由于支持更多特性，megalo 更贴近 Vue 原生的开发模式。从表格可以看到，megalo 最大的特点之一是，支持更多的 Vue 语法特性。这意味着，如果你有一个需求是要把现有的 Vue 代码迁移到小程序上，不需要太多改动。因为你的代码中可能大量使用 filter、scoped-slot、复杂表达式插值。基本语法支持 vue 的基本模版语法，包括 `v-for`、`v-if`。class 和 style 的绑定方式没有限制，官方的用法都支持。<!-- v-if & v-for --><div v-for=\"(item, i) in list\">  <div v-if=\"isEven(i)\">{{ i }} - {{ item }}</div></div> <!-- style & class --><div :class=\"classObject\"></div><div :class=\"{ active: true }\"></div><div :class=\"[activeClass, errorClass]\"></div><div :style=\"{ color: activeColor, fontSize: fontSize + 'px' }\"></div><div :style=\"styleObject\"></div><div :style=\"[baseStyles, overridingStyles]\"></div>slot & scoped-slot支持 slot 和 scoped-slot。<div> <Container>  <Card>    <div slot=\"head\"> {{ title }} </div>    <div> I'm body </div>    <div slot=\"foot\"> I'm footer </div>  </Card></Container>  <List :list=\"list\">  <span slot-scope=\"scopeProps\">{{ scopeProps.item.label }}</span></List> <div>复杂表达式 & filter可以在模版里面写复杂表达式、调用实例上的方法，当然也可以用更简洁的 filter 语法，跟平时用 Vue 开发一样。<div>  <div>{{ message.toUpperCase() }}</div>  <div>{{ toUpperCase( message ) }</div>  <div>{{ message | toUpperCase }}</div></div>v-html要使用 `v-html` 需要添加插件 `@megalo/vhtml-plugin`，并引入模版解析库 octoparse，在页面入口安装一下插件：import Vue from 'vue'import VHtmlPlugin from '@megalo/vhtml-plugin' Vue.use(VHtmlPlugin)利用 `v-html` 指令然后就可以在小程序中渲染 html 了。<div v-html=\"'<h1>megalo</h1>'\"></div>更好的数据更新性能小程序的官方明确说明，在调用 `setData` 更新数据时如果数据量过大或频率更高，会引发性能问题。megalo 在框架底层已经帮开发者对此进行优化，每次数据发生变化时，megalo 只会将视图中要展示的、且发生变化的数据进行更新，将 `setData` 的数据更新量最小化，同时对更新数据频率进行了限制。像下面这段代码，如果视图只需要展示 `user.name` 这个字段的话，在进行数据同步时只会将 `user.name` 这个字符串更新到视图层，其余字段是不会同步到小程序的对象上的。<div>{{ user.name }}</div><script>export default {  data() {    return {      user: {        name: 'kaola',        age: 3,        favorite: [          'encalyptus',          'sleeping'        ]      }    }  }}</script>支持更多平台今年以来，各大流量平台都在小程序领域有所动作，蚂蚁金服成立小程序事业部，百度、今日头条也纷纷推出自己的小程序。megalo 目前已经支持微信、alipay、百度小程序，头条小程序等平台的支持也在计划当中。<p align=\"center\">\n<a href=\"https://codecov.io/gh/kaola-fed/megalo\">\n<img src=\"https://img.shields.io/npm/v/megalo.svg?style=for-the-badge\" />\n</a>\n<a href=\"https://travis-ci.org/kaola-fed/megalo\">\n<img src=\"https://img.shields.io/travis-ci/kaola-fed/megalo.svg?branch=feature_megalo&style=for-the-badge\">\n</a>\n<a href=\"https://codecov.io/gh/kaola-fed/megalo\">\n<img src=\"https://img.shields.io/codecov/c/github/kaola-fed/megalo.svg?style=for-the-badge\" />\n</a>\n</p>\nMegalo\nMegalo 是基于 Vue（Vue@2.5.16） 的小程序开发框架，让开发者可以用 Vue 的开发方式开发小程序应用。Megalo 是为了跨 H5 和小程序两端的应用提供一个高效的解决方案，只需要少量改动即可完成 H5 和小程序之间的代码迁移。\nMegalo 目前支持微信小程序，支付宝小程序，百度智能小程序。\n配套设施\n\n文档\nmagalo-aot\ndemo\n工程实例\n\n支持\n\nmegalo 经公司内部大项目验证，可在你的公司或个人项目中使用\n如果你觉得还不错，请点下「star」以表支持\n任何技术问题均可在交流群内讨论\n\n<img alt=\"Join the chat at dingtalk\" src=\"https://user-images.githubusercontent.com/20720117/47690767-450cbd00-dc2a-11e8-9c59-2547341e0add.jpeg\" width=\"240\"/> <img alt=\"Join the chat at wechat\" src=\"https://user-images.githubusercontent.com/20720117/47761677-4c989880-dcf4-11e8-8586-bcc79e134e51.png\" width=\"240\"/>\n灵感来源\n名字来源于动画 Megalo Box。项目启发自 mpvue。\n<p align=\"center\"><img src=\"https://haitao.nos.netease.com/222d2a49-b9fe-4d95-aa61-074d910f0087.jpg\"></p>", "author": "ELCARIM", "title": "megalo -- 网易考拉小程序解决方案", "GitHub_Star": "852"}
{"pub_time": "01-17", "article_content": "扫码查看效果微信小程序图片裁剪工具we-cropper\n\n一款灵活小巧的canvas图片裁剪器 在线体验\n<div style=\"position:relative;width: 100%\">\n<img src=\"https://github.com/we-plugin/we-cropper/blob/master/docs/assets/screenshot.jpg\" width=\"50%\" style=\"position:absolute; left: 50%; transform:translateX(-50%)\" />\n</div>\nFeature\n\n实用的API\n灵活的钩子函数\n多场景的demo可供参考：\n\n常规裁剪\n上传裁剪头像\n裁剪网络图片\n添加水印\n局部裁剪\n\n\n\nUsage\n克隆项目到你的目录\ncd my-project\n\ngit clone https://github.com/we-plugin/we-cropper.git\n\n使用编译后的文件dist/weCropper.js\nvar WeCropper = require('dist/we-cropper')\n\n// ES6(需在开发工具勾选ES6转ES5)\nimport WeCropper from 'dist/we-cropper'\n\n对插件进行开发调试\nnpm install\n\n在src下进行文件修改\nnpm run build\n\nLinks\nDocument\nChangeLog\nExample\nThe MIT License\nContributing\n如果你有好的意见或建议，欢迎提issue或pull request", "author": "闵仙森ༀ", "title": "微信小程序图片裁剪工具we-cropper", "GitHub_Star": "972"}
{"pub_time": "2017-10-31", "article_content": "wxDraw.js--小程序的Canvas动画库正式发布wxDraw轻量的小程序canvas动画库github是什么canvas 是HTML5的一个重要元素，它能够高效的绘制图形，但是过于底层，且粗糙的Api，导致开发者很难使用它来做较为复杂的图形， 而且它的即时绘制无记忆特性，使得它内部的图形并不支持动画更不支持一切交互事件。这样的问题出现在所有支持canvas的客户端上同样出现在 微信小程序中的canvas中， 由于小程序由jscore支持，并没有window对象，并且canvas的Api与标准的canvas的Api有所出入，所以市面上绝大部分canvas库与它无缘。而wxDraw也就应运而生，专门用于处理小程序上canvas的图形创建、图形动画以及交互问题的。特性简单 不需要你会canvas,会用jQuery就会使用wxDraw。灵活 所有图形，随时随地都可以进行属性修改、图形添加以及图形销毁。事件支持 小程序支持的事件只要是合理的都支持。缓动动画支持 wxDraw支持链式调用动画『就像jQuery的animate一样』，并且支持几乎所有的缓动函数图形创建支持图形这些图形都可以在演示文件里看到 点这里rect var rect = new Shape('rect', {x: 60, y: 60, w: 40, h: 40, fillStyle: \"#2FB8AC\", rotate: Math.PI/2 },'mix', true);rectcircle let circle = new Shape('circle', { x: 100, y: 100, r: 40, sA: Math.PI/4, \n                             fillStyle: \"#C0D860\",                            strokeStyle: \"#CC333F\", rotate: 20, lineWidth: 0, needGra: 'line', \n                              gra: [[0, '#00A0B0'], [0.2, '#6A4A3C'], [0.4, '#CC333F'], [0.6, '#EB6841'], [1, '#EDC951']]}, \n                           'fill', true)polygonlet polygon = new Shape('polygon', { x: 200, y: 200, r: 40, sides: 9, //9边形\n                          fillStyle: \"#FC354C\", rotate: Math.PI / 4 }, 'mix', true)ellipse    let ellipse = new Shape('ellipse', { x: 200, y: 200, a: 40, b: 100, \n                             fillStyle: \"#00A0B0\", rotate: Math.PI / 7 }, 'mix', true)cshape 「自定义图形」  let cshape = new Shape('cshape', {      rotate: Math.PI / 2,      points: [[70, 85], [40, 20], [24, 46], [2, 4], [14, 6], [4, 46]],      lineWidth: 5,      fillStyle: \"#00A0B0\",      rotate: Math.PI / 7,      needGra: 'circle',      smooth:false,      gra: [[0, '#00A0B0'], [0.2, '#6A4A3C'], [0.4, '#CC333F'], [0.6, '#EB6841'], [1, '#EDC951']]\n    }, 'fill', true)linelet line = new Shape('line', { points:[[240,373],[11,32],[28,423],[12,105],[203,41],[128,0.06]], \n               strokeStyle: \"#2FB8AC\",lineWidth:1, rotate: 0, needShadow: true,smooth:false },  \n               'fill', true)text  let text = new Shape('text', { x: 200, y: 200, text: \"我是测试文字\", \n                      fillStyle: \"#E6781E\", rotate: Math.PI / 3}                      'fill', true)wxDraw创作的动画演示这些动画都可以在演示文件里看到 点这里Google贪吃蛇logo演绎rect舞蹈吃豆人wxDraw事件这些事件都可以在演示文件里看到 点这里支持taptouchStarttouchEndtouchMovelongPressdrag「自定义的事件」事件演示旁边UI小妹妹亲自示范 😜第一视角是不是特别简单，特别方便！！！来，老铁们！star 走一波！！！详细文档还请关注githubreadme not found", "author": "karl", "title": "wxDraw--全面的小程序的Canvas动画库(支持事件，动画)", "GitHub_Star": "1066"}
{"pub_time": "05-29", "article_content": "开发文档：https://mp.weixin.qq.com/wxopen/plugindevdoc?appid=wx069ba97219f66d99&token=61191740&lang=zh_CN插件功能语音转文字语音合成文本翻译具体使用案例可以查看面对面翻译小程序开源项目：  https://github.com/Tencent/Face2FaceTranslator                  简单DEMO实现：step 1：添加插件在使用前，需要登录官网 设置 → 第三方服务 → 添加插件搜索 【微信同声传译】并添加在需要使用插件的小程序 app.json 中指明需要使用的插件版本等信息// app.json{  ...  \"plugins\": {    ...    \"WechatSI\": {      \"version\": \"0.0.6\",      \"provider\": \"wx069ba97219f66d99\"  }}接下来，在index.js引入插件，获取全局唯一的语音识别管理器recordRecoManager// index.jsconst plugin = requirePlugin(\"WechatSI\")const manager = plugin.getRecordRecognitionManager()step 2：语音输入希望做到的效果是按住某个按钮，开始识别语音，松开按钮就结束识别<view  catchtouchstart=\"streamRecord\" catchtouchend=\"endStreamRecord\">中文view>// index.jsPage({  data: {},  streamRecord: function() {    manager.start({      lang: 'zh_CN',    })  },  streamRecordEnd: function() {    manager.stop()  }})step 3：绑定录音回调事件<view>语音识别内容：{{currentText}}view>// page.jsPage({  data: {    currentText: '',  },  initRecord: function() {    //有新的识别内容返回，则会调用此事件    manager.onRecognize = (res) => {      let text = res.result      this.setData({        currentText: text,      })    }    // 识别结束事件    manager.onStop = (res) => {      let text = res.result      if(text == '') {        // 用户没有说话，可以做一下提示处理...        return      }      this.setData({        currentText: text,      })      // 得到完整识别内容就可以去翻译了      this.translateTextAction()    }  },  translateTextAction: function() {},  onLoad: function() {    this.initRecord()  }})step 4：文本翻译<view>翻译结果：{{translateText}}view>// page.jsPage({  data: {    currentText: '',    translateText: '',  },  translateTextAction: function() {    let lfrom =  'zh_CN'    let lto = 'en_US'    plugin.translate({      lfrom: lfrom,      lto: lto,      content: this.data.currentText,      tts: true, // 需要合成语音      success: (resTrans)=>{        // 翻译可以得到 翻译文本，翻译文本的合成语音，合成语音的过期时间        let text = resTrans.result        this.setData({          translateText: text,        })        // 得到合成语音让它自动播放出来        wx.playBackgroundAudio({          dataUrl: resTrans.filename,          title: '',        })      },    })  },})step 5：语音合成plugin.translate得到的语音文件是有过期时间，可以download到本地使用。如果像面对面翻译一样需要存比较多历史记录的话，也可以选择过期之后调用plugin.textToSpeech接口再去重新合成一次。  plugin.textToSpeech({    lang: 'zh_CN',    content: '我想重新进行语音合成',    success: resTrans => {      // 可以重新得到语音合成文件和过期时间    },})面对面翻译小程序\n面对面翻译小程序是微信团队针对中英文面对面沟通的场景开发的流式语音翻译小程序，基于微信同声传译插件封装实现，提供了中英文语音识别，文本翻译等功能。\n预览\n\n下载与使用\n\n克隆代码\nproject.config.json 中的 appid 替换成在公众平台申请的项目 id\n在 公众平台 → 设置 → 第三方服务 → 插件管理 中 添加微信同声传译插件 (wx069ba97219f66d99)\n打开微信开发者工具中添加项目\n\n微信版本要求\n基础库版本 >= 1.9.94\n\n使用插件，需要基础库版本 >= 1.9.6\n插件内调用wx.getRecorderManager接口，需要基础库版本 >= 1.9.94\n\n微信同声传译插件支持功能\n\n语音识别 (目前支持 zh_CN（中国大陆）,  en_US（英语）)\n文本翻译 (目前支持 zh_CN（中国大陆）,  en_US（英语）)\n语音合成 (目前支持 zh_CN（中国大陆）,  en_US（英语）)\n\nFAQ\n什么时候开放英语语音合成？\n插件语音合成支持en_US（英语）正在加紧开发中\n插件语音合成目前已经支持en_US（英语）\n对于插件有新需求，可描述具体使用场景发送邮件至lethexie@tencent.com\nLicense\nThe MIT License", "author": "黄嘉敏", "title": "微信同声传译小程序插件 —— 机器翻译、智能语音", "GitHub_Star": "393"}
{"pub_time": "2017-09-06", "article_content": "WxRequest - 发送请求WxService - Promise APIWxValidate - 表单验证WxResource - Restful API微信小程序 - 扩展插件\n插件及文档\n\nWxRequest - 发送请求\nWxService - Promise API\nWxValidate - 表单验证\nWxResource - Restful API\n\n更新日志\n\nCHANGELOG\n\n贡献\n有任何意见或建议都欢迎提 issue\nLicense\nMIT", "author": "skyvow", "title": "微信小程序 - 扩展插件（Promise API、表单验证......）", "GitHub_Star": "431"}
{"pub_time": "05-12", "article_content": "实例教程本实例纯属个人编写，侵删一、环境搭建微信小程序后台开发，请参照https://github.com/htmlk/express在官网文档找到自己电脑适合的版本下载，直接安装（本人不建议使用破解版)微信小程序最新工具下载接下来会提示使用微信二维码登录，直接扫码登录二、下载demo直接使用git工具clone 上述代码，点击添加项目，将本程序添加到项目中即可！（appid选择无AppID，项目名随便取不一定是文件名，选择下载下来的目录）关注公众号，获取源码链接，加入微信小程序交流群微信小程序商城开发---真机测试有用！！！！\n目录\n\n\n官方文档\n\n\n更多代码\n\n\n分析轮子\n\n\n加入QQ群 564956472【微信小程序开发交流】(如果群满了加我个人QQ号(1009756987)我拉你入群)\n\n\n官方文档 微信商城开发，接受个人商业服务（后台，服务器等配置）。\n\n小程序开发文档\n小程序设计指南\n小程序开发者工具\n从搭建一个微信小程序开始(腾讯云)\n\n实例教程\n本实例纯属个人编写，侵删\n一、环境搭建\n\n微信小程序后台开发，请参照https://github.com/htmlk/express\n\n在官网文档找到自己电脑适合的版本下载，直接安装（本人不建议使用破解版)\n\n微信小程序最新工具下载\n\n接下来会提示使用微信二维码登录，直接扫码登录\n二、下载demo\n直接使用git工具clone 上述代码，点击添加项目，将本程序添加到项目中即可！\n（appid选择无AppID，项目名随便取不一定是文件名，选择下载下来的目录）\n\n三、开始编写代码\n进入调试页面（左边是调试预览，右边是类似于谷歌网页调试的工具）\n\n进入编辑代码页面\n\n1、app.json是项目的配置文件，如右图显示，\n第一部分（黑色框）是pages是整个里的页面，每添加页面一个页面，都要把路径写在这里：\n第二部分tabbar只要配置这些文件就可以产生app底部的导航（具体可参见文档）\n第三部分是widows全局配置\n2、pages是指你每个页面里面有四个文件json（配置文件)，js（自己编写的js），wxml（相当于html），wxss（相当于css）\n3、公共文件可以一般存储在远端，目前开发可以在本地新建，例如images（不能使用icon文件）\n4、更多详细可以联系博主\n项目演示\n点击查看，项目动态演示\n更多代码\n\n微信小应用示例代码(phodal/weapp-quick)\n微信小应用地图定位demo(giscafer/wechat-weapp-mapdemo)\n微信小应用- 掘金主页信息流(hilongjw/weapp-gold)\n微信小程序（应用号）示例：微信小程序豆瓣电影(zce/weapp-demo)\n微信小程序-豆瓣电影(hingsir/weapp-douban-film)\n小程序 hello world 尝鲜(kunkun12/weapp)\n微信小程序版2048小游戏(natee/wxapp-2048)\n微信小程序-微票(wangmingjob/weapp-weipiao)\n微信小程序购物车DEMO(SeptemberMaples/wechat-weapp-demo)\n微信小程序V2EX(jectychen/wechat-v2ex)\n微信小程序-知乎日报(myronliu347/wechat-app-zhihudaily)\n微信小程序-公众号热门文章信息流(hijiangtao/weapp-newsapp)\n微信小程序版Gank客户端(lypeer/wechat-weapp-gank)\n微信小程序集成Redux实现的Todo list(charleyw/wechat-weapp-redux-todos)\n微信小程序-番茄时钟(kraaas/timer)\n微信小程序项目汇总\n微信小程序版聊天室(ericzyh/wechat-chat)\n微信小程序-HiApp(BelinChung/wxapp-hiapp)\n小程序Redux绑定库(charleyw/wechat-weapp-redux)\n微信小程序版微信(18380435477/WeApp)\n小程序开发从布局开始(hardog/wechat-app-flexlayout)\n微信小程序-音乐播放器(eyasliu/wechat-app-music)\n微信小程序-简易计算器-适合入门（dunizb/wxapp-sCalc）\n微信小程序-github(zhengxiaowai/weapp-github)\n微信小程序-小熊の日记(harveyqing/BearDiary)\n微信小程序(Seahub/PigRaising)\n微信小程序(WeChatMeiZhi妹子图)\n微信小程序快速开发骨架\n微信小程序 - Artand 最专业的艺术设计平台\n\n分析轮子\n\n微信小程序倒计时组件(微信公众号)\n微信小程序下拉筛选组件(微信公众号)\n\n经验分享\n1、出现空白，没有报错，有可能是因为json是空。加一个{}就好了\n2、出现问题直接加博主微信。\n3、技术交流、商务合作请加微信。", "author": "小k", "title": "全栈微信小程序商城开发（源码+教程）", "GitHub_Star": "432"}
